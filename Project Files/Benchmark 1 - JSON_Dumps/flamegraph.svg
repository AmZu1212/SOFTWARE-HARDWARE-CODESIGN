<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>_PyObject_GetDictPtr (17,796,853 samples, 0.02%)</title><rect x="493.9" y="2037" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="496.95" y="2047.5" ></text>
</g>
<g >
<title>[python3.10d] (385,484,875 samples, 0.44%)</title><rect x="91.9" y="2053" width="5.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="94.91" y="2063.5" ></text>
</g>
<g >
<title>PyMem_Realloc (89,071,167 samples, 0.10%)</title><rect x="124.7" y="2037" width="1.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="127.75" y="2047.5" ></text>
</g>
<g >
<title>_PyUnicode_JoinArray (891,362,874 samples, 1.03%)</title><rect x="531.2" y="2037" width="12.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="534.22" y="2047.5" ></text>
</g>
<g >
<title>lookdict_unicode (294,074,959 samples, 0.34%)</title><rect x="1107.8" y="2053" width="4.0" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1110.76" y="2063.5" ></text>
</g>
<g >
<title>type_vectorcall.lto_priv.0 (15,689,870 samples, 0.02%)</title><rect x="1164.7" y="2053" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1167.69" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (754,834,111 samples, 0.87%)</title><rect x="185.5" y="469" width="10.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="479.5" ></text>
</g>
<g >
<title>[unknown] (785,481,549 samples, 0.90%)</title><rect x="185.5" y="533" width="10.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="543.5" ></text>
</g>
<g >
<title>_PyDict_NewPresized (29,695,243 samples, 0.03%)</title><rect x="267.9" y="2037" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="270.89" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_GC_NewVar (18,344,763 samples, 0.02%)</title><rect x="485.6" y="2037" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="488.57" y="2047.5" ></text>
</g>
<g >
<title>lookdict_split.lto_priv.0 (157,752,829 samples, 0.18%)</title><rect x="1105.6" y="2053" width="2.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1108.62" y="2063.5" ></text>
</g>
<g >
<title>PyObject_Hash (46,916,420 samples, 0.05%)</title><rect x="135.6" y="2037" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="138.65" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (61,308,295 samples, 0.07%)</title><rect x="202.5" y="2021" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="205.48" y="2031.5" ></text>
</g>
<g >
<title>inversion_rule.lto_priv.0 (18,475,411 samples, 0.02%)</title><rect x="667.6" y="2037" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="670.63" y="2047.5" ></text>
</g>
<g >
<title>_PyErr_Restore (35,453,165 samples, 0.04%)</title><rect x="268.7" y="2037" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="271.70" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (724,768,449 samples, 0.83%)</title><rect x="185.5" y="325" width="9.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="335.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (29,748,068 samples, 0.03%)</title><rect x="195.0" y="277" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="197.98" y="287.5" ></text>
</g>
<g >
<title>PyObject_GetIter (16,479,476 samples, 0.02%)</title><rect x="135.4" y="2037" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="138.42" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (785,481,549 samples, 0.90%)</title><rect x="185.5" y="565" width="10.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="575.5" ></text>
</g>
<g >
<title>r_object (246,561,588 samples, 0.28%)</title><rect x="1154.1" y="2053" width="3.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1157.15" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1285" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1295.5" ></text>
</g>
<g >
<title>r_byte (15,973,707 samples, 0.02%)</title><rect x="24.3" y="2037" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="27.34" y="2047.5" ></text>
</g>
<g >
<title>convertitem (59,584,522 samples, 0.07%)</title><rect x="236.9" y="2021" width="0.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="239.88" y="2031.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (29,487,651 samples, 0.03%)</title><rect x="196.2" y="629" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="199.21" y="639.5" ></text>
</g>
<g >
<title>convertsimple (412,194,784 samples, 0.47%)</title><rect x="622.0" y="2037" width="5.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="625.02" y="2047.5" ></text>
</g>
<g >
<title>PyThread_tss_get (29,328,738 samples, 0.03%)</title><rect x="15.1" y="2037" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="18.08" y="2047.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL.lto_priv.0 (53,246,850 samples, 0.06%)</title><rect x="1066.5" y="2053" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1069.47" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (845,056,045 samples, 0.97%)</title><rect x="185.5" y="1477" width="11.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1125" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1135.5" ></text>
</g>
<g >
<title>lookdict_unicode_nodummy (19,247,230 samples, 0.02%)</title><rect x="24.1" y="2037" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="27.08" y="2047.5" ></text>
</g>
<g >
<title>_PyUnicode_FromUCS1.lto_priv.0 (11,310,732 samples, 0.01%)</title><rect x="11.5" y="2037" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="14.49" y="2047.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (1,045,229,103 samples, 1.20%)</title><rect x="1134.6" y="2053" width="14.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1137.56" y="2063.5" ></text>
</g>
<g >
<title>set_next (32,816,092 samples, 0.04%)</title><rect x="198.4" y="2005" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="201.43" y="2015.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (823,870,437 samples, 0.95%)</title><rect x="706.0" y="2037" width="11.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="708.98" y="2047.5" ></text>
</g>
<g >
<title>__strlen_avx2_rtm (13,335,458 samples, 0.02%)</title><rect x="213.1" y="2021" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="216.08" y="2031.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe_rtm (20,458,405 samples, 0.02%)</title><rect x="21.8" y="2037" width="0.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="24.77" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_GenericSetAttrWithDict (33,689,934 samples, 0.04%)</title><rect x="493.5" y="2037" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="496.49" y="2047.5" ></text>
</g>
<g >
<title>_PyDict_LoadGlobal (17,976,016 samples, 0.02%)</title><rect x="820.1" y="2053" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="823.15" y="2063.5" ></text>
</g>
<g >
<title>PyDescr_IsData (21,861,508 samples, 0.03%)</title><rect x="99.0" y="2037" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="102.01" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (199,572,951 samples, 0.23%)</title><rect x="501.5" y="2037" width="2.7" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="504.47" y="2047.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms_rtm (556,701,890 samples, 0.64%)</title><rect x="967.7" y="2053" width="7.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="970.74" y="2063.5" ></text>
</g>
<g >
<title>_PyPegen_update_memo (17,029,657 samples, 0.02%)</title><rect x="880.7" y="2053" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="883.69" y="2063.5" ></text>
</g>
<g >
<title>pymalloc_realloc (77,627,342 samples, 0.09%)</title><rect x="720.9" y="2037" width="1.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="723.93" y="2047.5" ></text>
</g>
<g >
<title>tuple_alloc (98,743,097 samples, 0.11%)</title><rect x="1163.1" y="2053" width="1.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1166.11" y="2063.5" ></text>
</g>
<g >
<title>tupledealloc.lto_priv.0 (721,801,862 samples, 0.83%)</title><rect x="780.5" y="2037" width="9.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="783.55" y="2047.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms_rtm (2,891,176,330 samples, 3.33%)</title><rect x="549.9" y="2037" width="39.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="552.91" y="2047.5" >__m..</text>
</g>
<g >
<title>termios_exec (17,834,648 samples, 0.02%)</title><rect x="775.5" y="2037" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="778.55" y="2047.5" ></text>
</g>
<g >
<title>PyMem_Free (57,702,698 samples, 0.07%)</title><rect x="123.7" y="2037" width="0.8" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="126.73" y="2047.5" ></text>
</g>
<g >
<title>py_encode_basestring_ascii (153,622,501 samples, 0.18%)</title><rect x="717.4" y="2037" width="2.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="720.41" y="2047.5" ></text>
</g>
<g >
<title>_Py_NewReference (17,654,333 samples, 0.02%)</title><rect x="27.8" y="2053" width="0.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="30.83" y="2063.5" ></text>
</g>
<g >
<title>unicode_compare (35,252,733 samples, 0.04%)</title><rect x="793.7" y="2037" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="796.72" y="2047.5" ></text>
</g>
<g >
<title>sem_trywait@@GLIBC_2.34 (21,792,189 samples, 0.03%)</title><rect x="31.6" y="2053" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="34.57" y="2063.5" ></text>
</g>
<g >
<title>_Py_CheckSlotResult (18,759,372 samples, 0.02%)</title><rect x="27.6" y="2053" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="30.58" y="2063.5" ></text>
</g>
<g >
<title>_PyPegen_fill_token (13,803,589 samples, 0.02%)</title><rect x="880.3" y="2053" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="883.27" y="2063.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (58,859,830 samples, 0.07%)</title><rect x="10.5" y="2037" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="13.54" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_Realloc (29,894,592 samples, 0.03%)</title><rect x="504.2" y="2037" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="507.19" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_GC_New (114,683,112 samples, 0.13%)</title><rect x="484.0" y="2037" width="1.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="487.01" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_IsFreed (492,314,485 samples, 0.57%)</title><rect x="494.8" y="2037" width="6.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="497.79" y="2047.5" ></text>
</g>
<g >
<title>frame_alloc (24,849,784 samples, 0.03%)</title><rect x="1093.9" y="2053" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1096.91" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1717" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="917" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="927.5" ></text>
</g>
<g >
<title>[unknown] (63,082,672 samples, 0.07%)</title><rect x="15.5" y="2037" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.48" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawFree (11,874,535 samples, 0.01%)</title><rect x="201.1" y="2021" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="204.15" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (785,481,549 samples, 0.90%)</title><rect x="185.5" y="581" width="10.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="591.5" ></text>
</g>
<g >
<title>_loop1_79_rule.lto_priv.0 (17,064,068 samples, 0.02%)</title><rect x="1022.2" y="2053" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1025.19" y="2063.5" ></text>
</g>
<g >
<title>descr_check.lto_priv.0 (58,653,610 samples, 0.07%)</title><rect x="1071.6" y="2053" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1074.63" y="2063.5" ></text>
</g>
<g >
<title>PyVectorcall_Call (18,009,924 samples, 0.02%)</title><rect x="161.9" y="2037" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="164.89" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (28,440,138 samples, 0.03%)</title><rect x="193.7" y="165" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="196.74" y="175.5" ></text>
</g>
<g >
<title>visit_decref (15,132,125 samples, 0.02%)</title><rect x="1189.3" y="2053" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1192.30" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (107,625,023 samples, 0.12%)</title><rect x="830.2" y="2037" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="833.20" y="2047.5" ></text>
</g>
<g >
<title>_PyType_Lookup (490,024,418 samples, 0.56%)</title><rect x="510.0" y="2037" width="6.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="512.97" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1685" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1695.5" ></text>
</g>
<g >
<title>method_dealloc.lto_priv.0 (59,479,124 samples, 0.07%)</title><rect x="239.8" y="2021" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="242.79" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="885" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="895.5" ></text>
</g>
<g >
<title>code_dealloc.lto_priv.0 (26,015,103 samples, 0.03%)</title><rect x="620.5" y="2037" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="623.49" y="2047.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (281,185,406 samples, 0.32%)</title><rect x="240.8" y="2021" width="3.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="243.83" y="2031.5" ></text>
</g>
<g >
<title>PyList_Append (120,282,105 samples, 0.14%)</title><rect x="120.8" y="2037" width="1.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="123.84" y="2047.5" ></text>
</g>
<g >
<title>visit_reachable (36,245,281 samples, 0.04%)</title><rect x="1189.5" y="2053" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1192.51" y="2063.5" ></text>
</g>
<g >
<title>method_vectorcall (60,235,237 samples, 0.07%)</title><rect x="702.4" y="2037" width="0.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="705.38" y="2047.5" ></text>
</g>
<g >
<title>PyObject_GC_Del (17,785,659 samples, 0.02%)</title><rect x="14.4" y="2037" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="17.41" y="2047.5" ></text>
</g>
<g >
<title>_PyUnicode_IsLowercase (16,821,251 samples, 0.02%)</title><rect x="530.8" y="2037" width="0.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="533.76" y="2047.5" ></text>
</g>
<g >
<title>list_contains.lto_priv.0 (16,453,610 samples, 0.02%)</title><rect x="1096.2" y="2053" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1099.23" y="2063.5" ></text>
</g>
<g >
<title>__mbsrtowcs_l (12,604,753 samples, 0.01%)</title><rect x="547.6" y="2037" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="550.55" y="2047.5" ></text>
</g>
<g >
<title>PyObject_CallFinalizer (16,500,199 samples, 0.02%)</title><rect x="127.9" y="2037" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="130.95" y="2047.5" ></text>
</g>
<g >
<title>PyObject_Free (30,352,907 samples, 0.03%)</title><rect x="128.4" y="2037" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="131.41" y="2047.5" ></text>
</g>
<g >
<title>subtract_refs (44,328,567 samples, 0.05%)</title><rect x="190.1" y="37" width="0.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="193.15" y="47.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (50,808,970 samples, 0.06%)</title><rect x="373.4" y="2037" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="376.42" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawFree (482,871,760 samples, 0.56%)</title><rect x="457.5" y="2037" width="6.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="460.46" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawAlloc (13,082,249 samples, 0.02%)</title><rect x="201.0" y="2021" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="203.97" y="2031.5" ></text>
</g>
<g >
<title>sysmalloc_mmap.constprop.0 (29,308,296 samples, 0.03%)</title><rect x="1162.0" y="2053" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1165.04" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1829" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1839.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawAlloc (52,518,014 samples, 0.06%)</title><rect x="185.5" y="37" width="0.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="188.54" y="47.5" ></text>
</g>
<g >
<title>build_indices (84,206,664 samples, 0.10%)</title><rect x="1064.9" y="2053" width="1.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1067.90" y="2063.5" ></text>
</g>
<g >
<title>_PyGILState_GetThisThreadState (17,198,593 samples, 0.02%)</title><rect x="199.1" y="2021" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="202.10" y="2031.5" ></text>
</g>
<g >
<title>encoder_encode_string (63,108,478 samples, 0.07%)</title><rect x="631.5" y="2037" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="634.50" y="2047.5" ></text>
</g>
<g >
<title>PyDict_SetItem (120,845,420 samples, 0.14%)</title><rect x="106.8" y="2037" width="1.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="109.80" y="2047.5" ></text>
</g>
<g >
<title>get_latin1_char.lto_priv.0 (31,363,427 samples, 0.04%)</title><rect x="1094.5" y="2053" width="0.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1097.46" y="2063.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawFree (30,086,845 samples, 0.03%)</title><rect x="196.6" y="1461" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="199.61" y="1471.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (564,339,317 samples, 0.65%)</title><rect x="485.8" y="2037" width="7.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="488.82" y="2047.5" ></text>
</g>
<g >
<title>unicode_decode_locale (12,782,725 samples, 0.01%)</title><rect x="794.4" y="2037" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="797.44" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1797" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1807.5" ></text>
</g>
<g >
<title>handle_weakrefs (15,049,038 samples, 0.02%)</title><rect x="1095.4" y="2053" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1098.37" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (754,834,111 samples, 0.87%)</title><rect x="185.5" y="421" width="10.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="431.5" ></text>
</g>
<g >
<title>[unknown] (891,912,632 samples, 1.03%)</title><rect x="185.5" y="1589" width="12.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (603,489,200 samples, 0.69%)</title><rect x="185.5" y="117" width="8.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="127.5" ></text>
</g>
<g >
<title>OPENSSL_LH_doall_arg (19,267,197 samples, 0.02%)</title><rect x="97.7" y="2037" width="0.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="100.67" y="2047.5" ></text>
</g>
<g >
<title>finalize_garbage (14,252,361 samples, 0.02%)</title><rect x="186.9" y="37" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="189.89" y="47.5" ></text>
</g>
<g >
<title>_PyUnicodeWriter_WriteASCIIString (16,152,725 samples, 0.02%)</title><rect x="21.1" y="2037" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="24.06" y="2047.5" ></text>
</g>
<g >
<title>object_dealloc.lto_priv.0 (38,860,036 samples, 0.04%)</title><rect x="704.5" y="2037" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="707.47" y="2047.5" ></text>
</g>
<g >
<title>intern_string_constants (33,093,104 samples, 0.04%)</title><rect x="667.2" y="2037" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="670.18" y="2047.5" ></text>
</g>
<g >
<title>type_is_gc.lto_priv.0 (13,907,495 samples, 0.02%)</title><rect x="190.8" y="37" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="193.75" y="47.5" ></text>
</g>
<g >
<title>r_string (61,234,628 samples, 0.07%)</title><rect x="1157.5" y="2053" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1160.50" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1445" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1455.5" ></text>
</g>
<g >
<title>tupledealloc.lto_priv.0 (29,806,501 samples, 0.03%)</title><rect x="247.4" y="2021" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="250.35" y="2031.5" ></text>
</g>
<g >
<title>_PyPegen_is_memoized (31,731,526 samples, 0.04%)</title><rect x="198.0" y="2005" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="201.00" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1893" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1903.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawAlloc (398,222,321 samples, 0.46%)</title><rect x="844.2" y="2053" width="5.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="847.21" y="2063.5" ></text>
</g>
<g >
<title>_PyGILState_GetThisThreadState (236,889,310 samples, 0.27%)</title><rect x="374.1" y="2037" width="3.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="377.11" y="2047.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (281,652,239 samples, 0.32%)</title><rect x="131.1" y="2037" width="3.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="134.11" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1653" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1663.5" ></text>
</g>
<g >
<title>OPENSSL_LH_retrieve (14,173,081 samples, 0.02%)</title><rect x="97.9" y="2037" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="100.93" y="2047.5" ></text>
</g>
<g >
<title>[python3.10d] (497,370,228 samples, 0.57%)</title><rect x="173.0" y="2037" width="6.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="176.01" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="853" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="863.5" ></text>
</g>
<g >
<title>_PyUnicode_EqualToASCIIString (31,232,439 samples, 0.04%)</title><rect x="525.8" y="2037" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="528.84" y="2047.5" ></text>
</g>
<g >
<title>list_traverse.lto_priv.0 (12,739,117 samples, 0.01%)</title><rect x="686.0" y="2037" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="688.96" y="2047.5" ></text>
</g>
<g >
<title>PyLong_AsUnsignedLong (17,046,434 samples, 0.02%)</title><rect x="122.7" y="2037" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="125.70" y="2047.5" ></text>
</g>
<g >
<title>_PyUnicode_CheckConsistency (3,952,281,052 samples, 4.55%)</title><rect x="880.9" y="2053" width="53.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="883.92" y="2063.5" >_PyUn..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.10 (15,432,102 samples, 0.02%)</title><rect x="15.5" y="2021" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="18.48" y="2031.5" ></text>
</g>
<g >
<title>take_gil (17,346,334 samples, 0.02%)</title><rect x="1162.4" y="2053" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1165.44" y="2063.5" ></text>
</g>
<g >
<title>find_name_in_mro.lto_priv.0 (32,940,219 samples, 0.04%)</title><rect x="640.5" y="2037" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="643.48" y="2047.5" ></text>
</g>
<g >
<title>_PyFrame_New_NoTrack (356,979,123 samples, 0.41%)</title><rect x="827.1" y="2053" width="4.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="830.10" y="2063.5" ></text>
</g>
<g >
<title>_PyMem_DebugMalloc (418,810,248 samples, 0.48%)</title><rect x="838.5" y="2053" width="5.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="841.52" y="2063.5" ></text>
</g>
<g >
<title>_Py_HashBytes (13,315,594 samples, 0.02%)</title><rect x="964.5" y="2053" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="967.55" y="2063.5" ></text>
</g>
<g >
<title>delitem_common (14,236,134 samples, 0.02%)</title><rect x="28.3" y="2053" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="31.32" y="2063.5" ></text>
</g>
<g >
<title>read_size_t (118,645,876 samples, 0.14%)</title><rect x="244.6" y="2021" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="247.65" y="2031.5" ></text>
</g>
<g >
<title>PyType_IsSubtype (277,227,924 samples, 0.32%)</title><rect x="155.4" y="2037" width="3.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="158.44" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (29,911,952 samples, 0.03%)</title><rect x="194.1" y="213" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="197.12" y="223.5" ></text>
</g>
<g >
<title>maybe_small_long.lto_priv.0 (17,483,963 samples, 0.02%)</title><rect x="702.1" y="2037" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="705.15" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (785,481,549 samples, 0.90%)</title><rect x="185.5" y="597" width="10.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="607.5" ></text>
</g>
<g >
<title>[unknown] (603,489,200 samples, 0.69%)</title><rect x="185.5" y="133" width="8.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="143.5" ></text>
</g>
<g >
<title>_PyEval_Vector (28,877,914 samples, 0.03%)</title><rect x="826.7" y="2053" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="829.71" y="2063.5" ></text>
</g>
<g >
<title>OPENSSL_sk_value (19,459,560 samples, 0.02%)</title><rect x="180.0" y="2021" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="183.04" y="2031.5" ></text>
</g>
<g >
<title>_int_malloc (87,343,236 samples, 0.10%)</title><rect x="1020.6" y="2053" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1023.60" y="2063.5" ></text>
</g>
<g >
<title>unicode_fill_invalid.lto_priv.0 (548,914,443 samples, 0.63%)</title><rect x="1166.4" y="2053" width="7.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1169.44" y="2063.5" ></text>
</g>
<g >
<title>PyUnicode_FromString (12,278,992 samples, 0.01%)</title><rect x="160.3" y="2037" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="163.33" y="2047.5" ></text>
</g>
<g >
<title>long_to_decimal_string_internal (148,922,209 samples, 0.17%)</title><rect x="688.6" y="2037" width="2.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="691.63" y="2047.5" ></text>
</g>
<g >
<title>PyObject_IS_GC (14,464,193 samples, 0.02%)</title><rect x="14.7" y="2037" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="17.65" y="2047.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (283,303,669 samples, 0.33%)</title><rect x="832.0" y="2053" width="3.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="834.95" y="2063.5" ></text>
</g>
<g >
<title>PyObject_Hash (16,987,762 samples, 0.02%)</title><rect x="54.2" y="2053" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="57.23" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1701" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1711.5" ></text>
</g>
<g >
<title>[_json.cpython-310d-x86_64-linux-gnu.so] (459,726,463 samples, 0.53%)</title><rect x="85.4" y="2053" width="6.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="88.38" y="2063.5" ></text>
</g>
<g >
<title>resolve_slotdups (159,937,361 samples, 0.18%)</title><rect x="770.5" y="2037" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="773.45" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="901" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="911.5" ></text>
</g>
<g >
<title>dict_traverse.lto_priv.0 (15,958,845 samples, 0.02%)</title><rect x="28.5" y="2053" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="31.51" y="2063.5" ></text>
</g>
<g >
<title>PyLong_AsLongAndOverflow (16,802,525 samples, 0.02%)</title><rect x="122.5" y="2037" width="0.2" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="125.48" y="2047.5" ></text>
</g>
<g >
<title>set_dealloc.lto_priv.0 (13,153,520 samples, 0.02%)</title><rect x="1158.3" y="2053" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1161.33" y="2063.5" ></text>
</g>
<g >
<title>tuple_alloc (331,869,632 samples, 0.38%)</title><rect x="776.0" y="2037" width="4.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="779.04" y="2047.5" ></text>
</g>
<g >
<title>PyFloat_FromDouble (16,104,032 samples, 0.02%)</title><rect x="37.3" y="2053" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="40.33" y="2063.5" ></text>
</g>
<g >
<title>PyCallable_Check (30,590,358 samples, 0.04%)</title><rect x="98.4" y="2037" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="101.40" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="805" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="815.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms_rtm (12,028,747 samples, 0.01%)</title><rect x="22.0" y="2037" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="25.04" y="2047.5" ></text>
</g>
<g >
<title>get_dict_state (30,298,770 samples, 0.03%)</title><rect x="239.4" y="2021" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="242.38" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (904,950,774 samples, 1.04%)</title><rect x="13.9" y="2053" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.87" y="2063.5" ></text>
</g>
<g >
<title>_PyTrash_end (131,062,783 samples, 0.15%)</title><rect x="508.2" y="2037" width="1.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="511.19" y="2047.5" ></text>
</g>
<g >
<title>unicode_eq (18,270,313 samples, 0.02%)</title><rect x="1166.2" y="2053" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1169.19" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1461" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1471.5" ></text>
</g>
<g >
<title>encoder_listencode_dict (496,232,559 samples, 0.57%)</title><rect x="1079.2" y="2053" width="6.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1082.15" y="2063.5" ></text>
</g>
<g >
<title>PyCallable_Check (67,759,489 samples, 0.08%)</title><rect x="32.1" y="2053" width="0.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="35.10" y="2063.5" ></text>
</g>
<g >
<title>dpkg-query (39,692,800 samples, 0.05%)</title><rect x="10.0" y="2069" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>binary_op1 (76,849,180 samples, 0.09%)</title><rect x="616.6" y="2037" width="1.0" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="619.59" y="2047.5" ></text>
</g>
<g >
<title>tupleiter_next.lto_priv.0 (29,246,520 samples, 0.03%)</title><rect x="790.6" y="2037" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="793.55" y="2047.5" ></text>
</g>
<g >
<title>lookdict_unicode_nodummy (85,758,637 samples, 0.10%)</title><rect x="29.9" y="2053" width="1.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="32.90" y="2063.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (17,264,278 samples, 0.02%)</title><rect x="14.8" y="2037" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="17.85" y="2047.5" ></text>
</g>
<g >
<title>dict_traverse.lto_priv.0 (31,674,009 samples, 0.04%)</title><rect x="186.5" y="37" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="189.46" y="47.5" ></text>
</g>
<g >
<title>type_call.lto_priv.0 (12,496,048 samples, 0.01%)</title><rect x="791.2" y="2037" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="794.18" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.23 (29,390,390 samples, 0.03%)</title><rect x="505.4" y="2037" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="508.42" y="2047.5" ></text>
</g>
<g >
<title>type_is_gc.lto_priv.0 (27,317,472 samples, 0.03%)</title><rect x="793.3" y="2037" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="796.35" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugFree (386,927,012 samples, 0.45%)</title><rect x="440.8" y="2037" width="5.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="443.81" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (998,729,849 samples, 1.15%)</title><rect x="185.5" y="2021" width="13.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="2031.5" ></text>
</g>
<g >
<title>_PyDict_LoadGlobal (130,210,079 samples, 0.15%)</title><rect x="266.1" y="2037" width="1.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="269.12" y="2047.5" ></text>
</g>
<g >
<title>frame_dealloc.lto_priv.0 (500,075,188 samples, 0.58%)</title><rect x="643.8" y="2037" width="6.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="646.80" y="2047.5" ></text>
</g>
<g >
<title>PyObject_RichCompareBool (15,485,368 samples, 0.02%)</title><rect x="55.4" y="2053" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="58.42" y="2063.5" ></text>
</g>
<g >
<title>long_hash.lto_priv.0 (87,482,748 samples, 0.10%)</title><rect x="686.8" y="2037" width="1.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="689.81" y="2047.5" ></text>
</g>
<g >
<title>descr_check.lto_priv.0 (33,725,579 samples, 0.04%)</title><rect x="627.8" y="2037" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="630.83" y="2047.5" ></text>
</g>
<g >
<title>tupletraverse.lto_priv.0 (17,227,305 samples, 0.02%)</title><rect x="791.0" y="2037" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="793.95" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (754,834,111 samples, 0.87%)</title><rect x="185.5" y="389" width="10.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="399.5" ></text>
</g>
<g >
<title>_PyType_InitCache (9,087,339 samples, 0.01%)</title><rect x="27.5" y="2053" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="30.45" y="2063.5" ></text>
</g>
<g >
<title>update_refs (42,495,770 samples, 0.05%)</title><rect x="1174.6" y="2053" width="0.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1177.58" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (1,216,018,266 samples, 1.40%)</title><rect x="859.1" y="2053" width="16.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="862.08" y="2063.5" ></text>
</g>
<g >
<title>_PyUnicode_FromUCS1.lto_priv.0 (12,967,107 samples, 0.01%)</title><rect x="21.6" y="2037" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="24.59" y="2047.5" ></text>
</g>
<g >
<title>PyIter_Next (29,392,362 samples, 0.03%)</title><rect x="47.6" y="2053" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="50.58" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1637" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="837" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="847.5" ></text>
</g>
<g >
<title>python (85,237,204,061 samples, 98.13%)</title><rect x="32.1" y="2069" width="1157.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="35.10" y="2079.5" >python</text>
</g>
<g >
<title>_int_free (74,069,305 samples, 0.09%)</title><rect x="591.4" y="2037" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="594.43" y="2047.5" ></text>
</g>
<g >
<title>posix_do_stat (15,897,023 samples, 0.02%)</title><rect x="1134.1" y="2053" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1137.10" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1109" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1119.5" ></text>
</g>
<g >
<title>_PyLong_New (29,994,321 samples, 0.03%)</title><rect x="377.3" y="2037" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="380.33" y="2047.5" ></text>
</g>
<g >
<title>PyFunction_NewWithQualName (235,481,088 samples, 0.27%)</title><rect x="109.1" y="2037" width="3.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="112.15" y="2047.5" ></text>
</g>
<g >
<title>_memory_release (17,450,512 samples, 0.02%)</title><rect x="592.4" y="2037" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="595.43" y="2047.5" ></text>
</g>
<g >
<title>_PyDict_GetItem_KnownHash (48,437,117 samples, 0.06%)</title><rect x="265.5" y="2037" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="268.46" y="2047.5" ></text>
</g>
<g >
<title>free_keys_object.lto_priv.0 (28,872,598 samples, 0.03%)</title><rect x="238.7" y="2021" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="241.74" y="2031.5" ></text>
</g>
<g >
<title>PyLong_FromUnsignedLong (28,395,956 samples, 0.03%)</title><rect x="122.9" y="2037" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="125.94" y="2047.5" ></text>
</g>
<g >
<title>list_resize (539,954,510 samples, 0.62%)</title><rect x="678.6" y="2037" width="7.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="681.63" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1733" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="933" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="943.5" ></text>
</g>
<g >
<title>r_byte (15,984,172 samples, 0.02%)</title><rect x="1152.9" y="2053" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1155.86" y="2063.5" ></text>
</g>
<g >
<title>PyThreadState_Get (13,889,809 samples, 0.02%)</title><rect x="138.9" y="2037" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="141.86" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_GC_Malloc (16,480,725 samples, 0.02%)</title><rect x="856.1" y="2053" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="859.15" y="2063.5" ></text>
</g>
<g >
<title>meth_traverse.lto_priv.0 (9,929,381 samples, 0.01%)</title><rect x="12.0" y="2037" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="14.97" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1269" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1279.5" ></text>
</g>
<g >
<title>PyCode_NewWithPosOnlyArgs (14,688,791 samples, 0.02%)</title><rect x="98.8" y="2037" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="101.81" y="2047.5" ></text>
</g>
<g >
<title>_PyUnicode_FromId (114,629,825 samples, 0.13%)</title><rect x="936.6" y="2053" width="1.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="939.58" y="2063.5" ></text>
</g>
<g >
<title>dictiter_dealloc.lto_priv.0 (13,369,311 samples, 0.02%)</title><rect x="15.9" y="2021" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="18.93" y="2031.5" ></text>
</g>
<g >
<title>_PyObject_GenericSetAttrWithDict (17,923,032 samples, 0.02%)</title><rect x="856.4" y="2053" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="859.37" y="2063.5" ></text>
</g>
<g >
<title>PySlice_New (16,031,770 samples, 0.02%)</title><rect x="138.6" y="2037" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="141.64" y="2047.5" ></text>
</g>
<g >
<title>trim_unused_consts.lto_priv.0 (18,180,117 samples, 0.02%)</title><rect x="775.8" y="2037" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="778.79" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1813" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="661" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="671.5" ></text>
</g>
<g >
<title>pthread_rwlock_rdlock@GLIBC_2.2.5 (158,565,583 samples, 0.18%)</title><rect x="1148.8" y="2053" width="2.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1151.76" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1845" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1855.5" ></text>
</g>
<g >
<title>lsb_release (173,694,485 samples, 0.20%)</title><rect x="10.5" y="2069" width="2.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="13.54" y="2079.5" ></text>
</g>
<g >
<title>find_maxchar_surrogates (13,684,088 samples, 0.02%)</title><rect x="1088.7" y="2053" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1091.69" y="2063.5" ></text>
</g>
<g >
<title>map_next.lto_priv.0 (26,936,612 samples, 0.03%)</title><rect x="1132.1" y="2053" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1135.05" y="2063.5" ></text>
</g>
<g >
<title>PyDict_New (46,991,916 samples, 0.05%)</title><rect x="34.9" y="2053" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="37.88" y="2063.5" ></text>
</g>
<g >
<title>PyThread_tss_get (128,475,937 samples, 0.15%)</title><rect x="55.6" y="2053" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="58.63" y="2063.5" ></text>
</g>
<g >
<title>dict_traverse.lto_priv.0 (71,016,926 samples, 0.08%)</title><rect x="1076.5" y="2053" width="0.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1079.47" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (5,327,022,735 samples, 6.13%)</title><rect x="179.8" y="2037" width="72.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="182.77" y="2047.5" >[unknown]</text>
</g>
<g >
<title>do_lookup_x (33,730,661 samples, 0.04%)</title><rect x="1078.3" y="2053" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1081.30" y="2063.5" ></text>
</g>
<g >
<title>write_size_t (657,557,368 samples, 0.76%)</title><rect x="801.1" y="2037" width="9.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="804.14" y="2047.5" ></text>
</g>
<g >
<title>PyMethod_New (127,575,364 samples, 0.15%)</title><rect x="126.0" y="2037" width="1.7" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="128.96" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1669" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1679.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawFree (31,186,119 samples, 0.04%)</title><rect x="197.0" y="1493" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="200.02" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="869" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="879.5" ></text>
</g>
<g >
<title>[unknown] (917,268,594 samples, 1.06%)</title><rect x="185.5" y="1973" width="12.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1983.5" ></text>
</g>
<g >
<title>_PyEval_MakeFrameVector (464,984,348 samples, 0.54%)</title><rect x="820.4" y="2053" width="6.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="823.39" y="2063.5" ></text>
</g>
<g >
<title>PyErr_Occurred (121,067,284 samples, 0.14%)</title><rect x="35.7" y="2053" width="1.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="38.69" y="2063.5" ></text>
</g>
<g >
<title>remove_all_subclasses.lto_priv.0 (18,423,486 samples, 0.02%)</title><rect x="770.2" y="2037" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="773.20" y="2047.5" ></text>
</g>
<g >
<title>cleanreturn (15,987,399 samples, 0.02%)</title><rect x="1067.4" y="2053" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1070.41" y="2063.5" ></text>
</g>
<g >
<title>_PyUnicode_FromId (141,403,143 samples, 0.16%)</title><rect x="526.3" y="2037" width="1.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="529.27" y="2047.5" ></text>
</g>
<g >
<title>convertitem (86,654,890 samples, 0.10%)</title><rect x="620.8" y="2037" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="623.85" y="2047.5" ></text>
</g>
<g >
<title>call_function.lto_priv.0 (80,726,346 samples, 0.09%)</title><rect x="618.2" y="2037" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="621.24" y="2047.5" ></text>
</g>
<g >
<title>dict_keys_inorder (18,127,567 samples, 0.02%)</title><rect x="630.8" y="2037" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="633.77" y="2047.5" ></text>
</g>
<g >
<title>object_dealloc.lto_priv.0 (29,389,199 samples, 0.03%)</title><rect x="1133.3" y="2053" width="0.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1136.30" y="2063.5" ></text>
</g>
<g >
<title>PyType_IsSubtype (18,626,622 samples, 0.02%)</title><rect x="13.4" y="2053" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="16.39" y="2063.5" ></text>
</g>
<g >
<title>stackdepth (15,440,310 samples, 0.02%)</title><rect x="1161.1" y="2053" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1164.14" y="2063.5" ></text>
</g>
<g >
<title>func_clear.lto_priv.0 (18,658,439 samples, 0.02%)</title><rect x="239.1" y="2021" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="242.13" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (631,929,338 samples, 0.73%)</title><rect x="185.5" y="213" width="8.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="223.5" ></text>
</g>
<g >
<title>shift_expr_rule (16,630,097 samples, 0.02%)</title><rect x="1158.7" y="2053" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1161.71" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_Free (12,258,070 samples, 0.01%)</title><rect x="19.6" y="2037" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="22.63" y="2047.5" ></text>
</g>
<g >
<title>get_tuple_state (175,938,603 samples, 0.20%)</title><rect x="655.4" y="2037" width="2.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="658.41" y="2047.5" ></text>
</g>
<g >
<title>_Py_CheckFunctionResult (31,894,094 samples, 0.04%)</title><rect x="543.3" y="2037" width="0.5" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="546.33" y="2047.5" ></text>
</g>
<g >
<title>find_name_in_mro.lto_priv.0 (53,692,884 samples, 0.06%)</title><rect x="28.7" y="2053" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="31.73" y="2063.5" ></text>
</g>
<g >
<title>type_new_descriptors (17,284,555 samples, 0.02%)</title><rect x="247.8" y="2021" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="250.76" y="2031.5" ></text>
</g>
<g >
<title>convertsimple (29,308,296 samples, 0.03%)</title><rect x="1162.0" y="2037" width="0.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1165.04" y="2047.5" ></text>
</g>
<g >
<title>_PyDict_GetItemHint (386,382,883 samples, 0.44%)</title><rect x="259.8" y="2037" width="5.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="262.81" y="2047.5" ></text>
</g>
<g >
<title>unsafe_latin_compare (15,119,441 samples, 0.02%)</title><rect x="795.7" y="2037" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="798.70" y="2047.5" ></text>
</g>
<g >
<title>super_getattro.lto_priv.0 (14,902,890 samples, 0.02%)</title><rect x="774.4" y="2037" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="777.44" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawFree (13,106,021 samples, 0.02%)</title><rect x="197.7" y="1605" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="200.65" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (603,489,200 samples, 0.69%)</title><rect x="185.5" y="165" width="8.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="175.5" ></text>
</g>
<g >
<title>PyUnicode_Format (12,047,506 samples, 0.01%)</title><rect x="159.8" y="2037" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="162.76" y="2047.5" ></text>
</g>
<g >
<title>pymalloc_realloc (30,508,747 samples, 0.04%)</title><rect x="1152.0" y="2053" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1154.99" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (631,929,338 samples, 0.73%)</title><rect x="185.5" y="181" width="8.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="191.5" ></text>
</g>
<g >
<title>findchar.lto_priv.0 (33,437,285 samples, 0.04%)</title><rect x="640.9" y="2037" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="643.93" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_Calloc (55,905,137 samples, 0.06%)</title><rect x="855.4" y="2053" width="0.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="858.39" y="2063.5" ></text>
</g>
<g >
<title>_PyDict_GetItemIdWithError (29,903,420 samples, 0.03%)</title><rect x="265.1" y="2037" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="268.06" y="2047.5" ></text>
</g>
<g >
<title>_PyUnicode_FastCopyCharacters (144,620,010 samples, 0.17%)</title><rect x="934.6" y="2053" width="2.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="937.61" y="2063.5" ></text>
</g>
<g >
<title>_PyGILState_GetThisThreadState (17,894,842 samples, 0.02%)</title><rect x="26.6" y="2053" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="29.59" y="2063.5" ></text>
</g>
<g >
<title>get_type_cache.lto_priv.0 (170,679,581 samples, 0.20%)</title><rect x="657.8" y="2037" width="2.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="660.80" y="2047.5" ></text>
</g>
<g >
<title>Py_EnterRecursiveCall (27,766,318 samples, 0.03%)</title><rect x="162.1" y="2037" width="0.4" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="165.14" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1301" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1861" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1871.5" ></text>
</g>
<g >
<title>vgetargskeywords (324,550,122 samples, 0.37%)</title><rect x="1184.9" y="2053" width="4.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1187.89" y="2063.5" ></text>
</g>
<g >
<title>visit_decref (281,951,293 samples, 0.32%)</title><rect x="796.3" y="2037" width="3.8" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="799.27" y="2047.5" ></text>
</g>
<g >
<title>PyIter_Next (29,429,209 samples, 0.03%)</title><rect x="120.4" y="2037" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="123.44" y="2047.5" ></text>
</g>
<g >
<title>_PyUnicode_CheckConsistency (17,544,784 samples, 0.02%)</title><rect x="15.7" y="2021" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="18.69" y="2031.5" ></text>
</g>
<g >
<title>read_size_t (19,339,145 samples, 0.02%)</title><rect x="24.8" y="2037" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="27.76" y="2047.5" ></text>
</g>
<g >
<title>PyDict_SetItem (12,686,492 samples, 0.01%)</title><rect x="35.5" y="2053" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="38.52" y="2063.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawRealloc (299,582,925 samples, 0.34%)</title><rect x="464.0" y="2037" width="4.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="467.02" y="2047.5" ></text>
</g>
<g >
<title>int_from_bytes.lto_priv.0 (16,948,771 samples, 0.02%)</title><rect x="666.9" y="2037" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="669.95" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (845,056,045 samples, 0.97%)</title><rect x="185.5" y="1493" width="11.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1429" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1439.5" ></text>
</g>
<g >
<title>unicode_startswith.lto_priv.0 (17,515,060 samples, 0.02%)</title><rect x="795.3" y="2037" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="798.26" y="2047.5" ></text>
</g>
<g >
<title>[libcrypto.so.3] (628,749,743 samples, 0.72%)</title><rect x="164.5" y="2037" width="8.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="167.47" y="2047.5" ></text>
</g>
<g >
<title>func_clear.lto_priv.0 (135,491,842 samples, 0.16%)</title><rect x="651.8" y="2037" width="1.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="654.81" y="2047.5" ></text>
</g>
<g >
<title>encoder_call (29,369,250 samples, 0.03%)</title><rect x="1078.8" y="2053" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1081.75" y="2063.5" ></text>
</g>
<g >
<title>BN_bin2bn (21,444,492 samples, 0.02%)</title><rect x="97.1" y="2037" width="0.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="100.14" y="2047.5" ></text>
</g>
<g >
<title>PyType_GenericAlloc (49,265,679 samples, 0.06%)</title><rect x="64.9" y="2053" width="0.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="67.88" y="2063.5" ></text>
</g>
<g >
<title>OPENSSL_cleanse (19,840,967 samples, 0.02%)</title><rect x="98.1" y="2037" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="101.13" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (785,481,549 samples, 0.90%)</title><rect x="185.5" y="549" width="10.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="559.5" ></text>
</g>
<g >
<title>PyUnicode_FindChar (16,756,037 samples, 0.02%)</title><rect x="13.6" y="2053" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="16.64" y="2063.5" ></text>
</g>
<g >
<title>call_attribute (14,699,615 samples, 0.02%)</title><rect x="618.0" y="2037" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="621.04" y="2047.5" ></text>
</g>
<g >
<title>module_getattro.lto_priv.0 (16,757,640 samples, 0.02%)</title><rect x="240.6" y="2021" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="243.60" y="2031.5" ></text>
</g>
<g >
<title>write_size_t (16,913,637 samples, 0.02%)</title><rect x="198.9" y="2005" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="201.87" y="2015.5" ></text>
</g>
<g >
<title>list_iter.lto_priv.0 (118,591,604 samples, 0.14%)</title><rect x="677.0" y="2037" width="1.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="680.02" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (891,912,632 samples, 1.03%)</title><rect x="185.5" y="1605" width="12.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1615.5" ></text>
</g>
<g >
<title>siphash24 (162,108,462 samples, 0.19%)</title><rect x="1158.9" y="2053" width="2.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1161.94" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (754,834,111 samples, 0.87%)</title><rect x="185.5" y="373" width="10.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="383.5" ></text>
</g>
<g >
<title>address_in_range (163,003,251 samples, 0.19%)</title><rect x="593.7" y="2037" width="2.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="596.68" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (754,834,111 samples, 0.87%)</title><rect x="185.5" y="453" width="10.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="463.5" ></text>
</g>
<g >
<title>ascii_escape_unicode (2,464,318,013 samples, 2.84%)</title><rect x="1031.0" y="2053" width="33.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1033.95" y="2063.5" >as..</text>
</g>
<g >
<title>_Py_Dealloc (112,960,994 samples, 0.13%)</title><rect x="209.5" y="2021" width="1.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="212.53" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (785,481,549 samples, 0.90%)</title><rect x="185.5" y="517" width="10.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="527.5" ></text>
</g>
<g >
<title>object_isinstance (42,621,288 samples, 0.05%)</title><rect x="705.0" y="2037" width="0.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="707.99" y="2047.5" ></text>
</g>
<g >
<title>malloc (109,910,693 samples, 0.13%)</title><rect x="1130.6" y="2053" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1133.56" y="2063.5" ></text>
</g>
<g >
<title>ascii_escape_unichar (31,957,986 samples, 0.04%)</title><rect x="1030.5" y="2053" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1033.52" y="2063.5" ></text>
</g>
<g >
<title>realloc (59,846,618 samples, 0.07%)</title><rect x="769.1" y="2037" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="772.15" y="2047.5" ></text>
</g>
<g >
<title>call_function.lto_priv.0 (871,446,719 samples, 1.00%)</title><rect x="224.7" y="2021" width="11.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="227.66" y="2031.5" ></text>
</g>
<g >
<title>tailmatch.lto_priv.0 (22,731,179 samples, 0.03%)</title><rect x="25.5" y="2037" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="28.45" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (785,481,549 samples, 0.90%)</title><rect x="185.5" y="613" width="10.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms_rtm (73,795,467 samples, 0.08%)</title><rect x="212.1" y="2021" width="1.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="215.07" y="2031.5" ></text>
</g>
<g >
<title>update_one_slot (13,834,780 samples, 0.02%)</title><rect x="251.9" y="2021" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="254.94" y="2031.5" ></text>
</g>
<g >
<title>add_operators.lto_priv.0 (15,471,810 samples, 0.02%)</title><rect x="1023.5" y="2053" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1026.51" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (17,069,214 samples, 0.02%)</title><rect x="875.6" y="2053" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="878.60" y="2063.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (12,941,641 samples, 0.01%)</title><rect x="180.3" y="2021" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="183.30" y="2031.5" ></text>
</g>
<g >
<title>unicode_dealloc.lto_priv.0 (264,116,802 samples, 0.30%)</title><rect x="248.4" y="2021" width="3.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="251.35" y="2031.5" ></text>
</g>
<g >
<title>float_dealloc.lto_priv.0 (29,905,725 samples, 0.03%)</title><rect x="641.4" y="2037" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="644.38" y="2047.5" ></text>
</g>
<g >
<title>cleanreturn (28,437,952 samples, 0.03%)</title><rect x="236.5" y="2021" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="239.50" y="2031.5" ></text>
</g>
<g >
<title>PySlice_AdjustIndices (15,765,994 samples, 0.02%)</title><rect x="138.4" y="2037" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="141.43" y="2047.5" ></text>
</g>
<g >
<title>untrack_tuples (13,566,596 samples, 0.02%)</title><rect x="190.9" y="37" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="193.94" y="47.5" ></text>
</g>
<g >
<title>dict_items (297,972,571 samples, 0.34%)</title><rect x="1072.4" y="2053" width="4.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1075.43" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (661,841,290 samples, 0.76%)</title><rect x="185.5" y="245" width="9.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="255.5" ></text>
</g>
<g >
<title>rangeiter_next.lto_priv.0 (15,559,964 samples, 0.02%)</title><rect x="722.7" y="2037" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="725.66" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1877" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1887.5" ></text>
</g>
<g >
<title>_int_realloc (13,329,478 samples, 0.02%)</title><rect x="1021.8" y="2053" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1024.79" y="2063.5" ></text>
</g>
<g >
<title>r_long (79,089,859 samples, 0.09%)</title><rect x="1153.1" y="2053" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1156.07" y="2063.5" ></text>
</g>
<g >
<title>lookdict_unicode_nodummy.lto_priv.0 (23,785,237 samples, 0.03%)</title><rect x="11.6" y="2037" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="14.65" y="2047.5" ></text>
</g>
<g >
<title>object_recursive_isinstance (30,279,611 samples, 0.03%)</title><rect x="705.6" y="2037" width="0.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="708.57" y="2047.5" ></text>
</g>
<g >
<title>_Py_Dealloc (129,578,634 samples, 0.15%)</title><rect x="544.0" y="2037" width="1.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="546.98" y="2047.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe_rtm (19,314,055 samples, 0.02%)</title><rect x="547.9" y="2037" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="550.90" y="2047.5" ></text>
</g>
<g >
<title>_steal_accumulate (58,652,004 samples, 0.07%)</title><rect x="592.7" y="2037" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="595.67" y="2047.5" ></text>
</g>
<g >
<title>object_isinstance (29,951,216 samples, 0.03%)</title><rect x="1133.7" y="2053" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1136.70" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (33,179,091 samples, 0.04%)</title><rect x="194.5" y="261" width="0.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="197.53" y="271.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="789" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="799.5" ></text>
</g>
<g >
<title>lookdict_split.lto_priv.0 (131,239,921 samples, 0.15%)</title><rect x="693.9" y="2037" width="1.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="696.92" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (145,063,508 samples, 0.17%)</title><rect x="857.1" y="2053" width="2.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="860.11" y="2063.5" ></text>
</g>
<g >
<title>lookdict_unicode_nodummy (1,384,357,103 samples, 1.59%)</title><rect x="1111.8" y="2053" width="18.8" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1114.75" y="2063.5" ></text>
</g>
<g >
<title>long_from_binary_base (25,822,677 samples, 0.03%)</title><rect x="1102.8" y="2053" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1105.80" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (917,268,594 samples, 1.06%)</title><rect x="185.5" y="1941" width="12.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1951.5" ></text>
</g>
<g >
<title>arena_map_get (393,116,276 samples, 0.45%)</title><rect x="1025.2" y="2053" width="5.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1028.18" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (39,692,800 samples, 0.05%)</title><rect x="10.0" y="2053" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>handle_weakrefs (14,190,355 samples, 0.02%)</title><rect x="660.6" y="2037" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="663.57" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1141" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1151.5" ></text>
</g>
<g >
<title>__memrchr_avx2_rtm (15,319,107 samples, 0.02%)</title><rect x="549.7" y="2037" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="552.70" y="2047.5" ></text>
</g>
<g >
<title>arena_map_get (73,854,760 samples, 0.09%)</title><rect x="606.1" y="2037" width="1.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="609.11" y="2047.5" ></text>
</g>
<g >
<title>_loop1_104_rule.lto_priv.0 (16,292,676 samples, 0.02%)</title><rect x="1022.0" y="2053" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1024.97" y="2063.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe_rtm (50,553,289 samples, 0.06%)</title><rect x="967.1" y="2053" width="0.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="970.05" y="2063.5" ></text>
</g>
<g >
<title>_Py_NewReference (138,648,504 samples, 0.16%)</title><rect x="964.7" y="2053" width="1.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="967.73" y="2063.5" ></text>
</g>
<g >
<title>PyUnicode_FromFormatV (30,381,238 samples, 0.03%)</title><rect x="159.9" y="2037" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="162.92" y="2047.5" ></text>
</g>
<g >
<title>pysiphash (33,211,724 samples, 0.04%)</title><rect x="1152.4" y="2053" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1155.40" y="2063.5" ></text>
</g>
<g >
<title>PyUnicode_RichCompare (51,210,539 samples, 0.06%)</title><rect x="161.2" y="2037" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="164.19" y="2047.5" ></text>
</g>
<g >
<title>siphash24 (16,976,632 samples, 0.02%)</title><rect x="31.9" y="2053" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="34.87" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="981" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="991.5" ></text>
</g>
<g >
<title>_PyObject_GC_Alloc (14,480,162 samples, 0.02%)</title><rect x="19.8" y="2037" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="22.79" y="2047.5" ></text>
</g>
<g >
<title>PyLong_FromVoidPtr (29,984,890 samples, 0.03%)</title><rect x="123.3" y="2037" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="126.32" y="2047.5" ></text>
</g>
<g >
<title>vgetargs1_impl (35,997,412 samples, 0.04%)</title><rect x="1184.4" y="2053" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1187.40" y="2063.5" ></text>
</g>
<g >
<title>lookup_maybe_method.lto_priv.0 (31,426,933 samples, 0.04%)</title><rect x="701.7" y="2037" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="704.72" y="2047.5" ></text>
</g>
<g >
<title>_PyDict_CheckConsistency (13,662,539 samples, 0.02%)</title><rect x="16.3" y="2037" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="19.34" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugMalloc (18,006,351 samples, 0.02%)</title><rect x="26.8" y="2053" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="29.84" y="2063.5" ></text>
</g>
<g >
<title>__mbstowcs_chk (13,025,080 samples, 0.01%)</title><rect x="547.7" y="2037" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="550.72" y="2047.5" ></text>
</g>
<g >
<title>unicode_isupper_impl.lto_priv.0 (12,227,953 samples, 0.01%)</title><rect x="795.1" y="2037" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="798.09" y="2047.5" ></text>
</g>
<g >
<title>super_init.lto_priv.0 (17,391,750 samples, 0.02%)</title><rect x="774.6" y="2037" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="777.64" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="693" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="703.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1781" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1381" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1391.5" ></text>
</g>
<g >
<title>super_getattro.lto_priv.0 (17,218,300 samples, 0.02%)</title><rect x="25.2" y="2037" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="28.22" y="2047.5" ></text>
</g>
<g >
<title>list_ass_slice (29,754,193 samples, 0.03%)</title><rect x="1095.8" y="2053" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1098.82" y="2063.5" ></text>
</g>
<g >
<title>set_next (16,133,742 samples, 0.02%)</title><rect x="189.9" y="37" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="192.93" y="47.5" ></text>
</g>
<g >
<title>PyCMethod_New (21,877,076 samples, 0.03%)</title><rect x="13.9" y="2037" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="16.87" y="2047.5" ></text>
</g>
<g >
<title>_PyEval_BuiltinsFromGlobals (14,325,212 samples, 0.02%)</title><rect x="269.4" y="2037" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="272.40" y="2047.5" ></text>
</g>
<g >
<title>r_long (14,454,727 samples, 0.02%)</title><rect x="24.6" y="2037" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="27.56" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_GetDictPtr (18,340,991 samples, 0.02%)</title><rect x="856.6" y="2053" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="859.62" y="2063.5" ></text>
</g>
<g >
<title>validate_list (665,320,898 samples, 0.77%)</title><rect x="1175.4" y="2053" width="9.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1178.37" y="2063.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawRealloc (86,302,622 samples, 0.10%)</title><rect x="201.3" y="2021" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="204.31" y="2031.5" ></text>
</g>
<g >
<title>_PyType_Lookup (21,664,692 samples, 0.02%)</title><rect x="831.7" y="2037" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="834.66" y="2047.5" ></text>
</g>
<g >
<title>find_empty_slot (124,807,429 samples, 0.14%)</title><rect x="638.8" y="2037" width="1.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="641.78" y="2047.5" ></text>
</g>
<g >
<title>wrapperdescr_get.lto_priv.0 (60,027,743 samples, 0.07%)</title><rect x="800.3" y="2037" width="0.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="803.32" y="2047.5" ></text>
</g>
<g >
<title>BN_uadd (20,023,740 samples, 0.02%)</title><rect x="179.8" y="2021" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="182.77" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (754,834,111 samples, 0.87%)</title><rect x="185.5" y="437" width="10.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="447.5" ></text>
</g>
<g >
<title>tailmatch.lto_priv.0 (49,477,341 samples, 0.06%)</title><rect x="774.9" y="2037" width="0.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="777.88" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (11,472,658 samples, 0.01%)</title><rect x="11.3" y="2037" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="14.34" y="2047.5" ></text>
</g>
<g >
<title>_PyArena_Malloc (16,464,234 samples, 0.02%)</title><rect x="817.1" y="2053" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="820.06" y="2063.5" ></text>
</g>
<g >
<title>await_primary_rule (18,759,753 samples, 0.02%)</title><rect x="1064.4" y="2053" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1067.43" y="2063.5" ></text>
</g>
<g >
<title>dictresize (46,859,355 samples, 0.05%)</title><rect x="1077.4" y="2053" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1080.44" y="2063.5" ></text>
</g>
<g >
<title>PyNumber_AsSsize_t (28,830,816 samples, 0.03%)</title><rect x="51.2" y="2053" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="54.20" y="2063.5" ></text>
</g>
<g >
<title>_copy_characters (39,051,291 samples, 0.04%)</title><rect x="589.6" y="2037" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="592.64" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1237" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1247.5" ></text>
</g>
<g >
<title>_copy_characters (15,338,156 samples, 0.02%)</title><rect x="213.3" y="2021" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="216.26" y="2031.5" ></text>
</g>
<g >
<title>update_one_slot (14,724,989 samples, 0.02%)</title><rect x="795.9" y="2037" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="798.91" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.10 (61,047,499 samples, 0.07%)</title><rect x="504.6" y="2037" width="0.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="507.59" y="2047.5" ></text>
</g>
<g >
<title>do_argstrip (16,478,671 samples, 0.02%)</title><rect x="237.9" y="2021" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="240.92" y="2031.5" ></text>
</g>
<g >
<title>builtin_hasattr_impl (15,780,253 samples, 0.02%)</title><rect x="22.6" y="2037" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="25.63" y="2047.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms_rtm (74,008,082 samples, 0.09%)</title><rect x="211.1" y="2021" width="1.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="214.07" y="2031.5" ></text>
</g>
<g >
<title>vgetargs1_impl.lto_priv.0 (23,607,232 samples, 0.03%)</title><rect x="12.6" y="2053" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="15.58" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="725" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="735.5" ></text>
</g>
<g >
<title>special_lookup.lto_priv.0 (17,649,000 samples, 0.02%)</title><rect x="774.2" y="2037" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="777.20" y="2047.5" ></text>
</g>
<g >
<title>compiler_addop_line (18,230,234 samples, 0.02%)</title><rect x="1067.6" y="2053" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1070.63" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1077" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1087.5" ></text>
</g>
<g >
<title>update_slot.lto_priv.0 (15,414,810 samples, 0.02%)</title><rect x="1175.2" y="2053" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1178.16" y="2063.5" ></text>
</g>
<g >
<title>func_traverse.lto_priv.0 (15,425,719 samples, 0.02%)</title><rect x="187.1" y="37" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="190.08" y="47.5" ></text>
</g>
<g >
<title>[unknown] (724,768,449 samples, 0.83%)</title><rect x="185.5" y="341" width="9.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="351.5" ></text>
</g>
<g >
<title>encoder_listencode_obj (351,967,383 samples, 0.41%)</title><rect x="634.0" y="2037" width="4.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="637.00" y="2047.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (66,875,821 samples, 0.08%)</title><rect x="137.5" y="2037" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="140.52" y="2047.5" ></text>
</g>
<g >
<title>unicode_subscript.lto_priv.0 (15,033,992 samples, 0.02%)</title><rect x="795.5" y="2037" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="798.50" y="2047.5" ></text>
</g>
<g >
<title>_PyGILState_GetThisThreadState (200,484,545 samples, 0.23%)</title><rect x="835.8" y="2053" width="2.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="838.80" y="2063.5" ></text>
</g>
<g >
<title>clone_combined_dict_keys (16,457,257 samples, 0.02%)</title><rect x="620.3" y="2037" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="623.27" y="2047.5" ></text>
</g>
<g >
<title>free_keys_object.lto_priv.0 (89,646,002 samples, 0.10%)</title><rect x="650.6" y="2037" width="1.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="653.59" y="2047.5" ></text>
</g>
<g >
<title>slot_tp_setattro.lto_priv.0 (16,783,282 samples, 0.02%)</title><rect x="773.7" y="2037" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="776.73" y="2047.5" ></text>
</g>
<g >
<title>gc_collect_main (15,461,549 samples, 0.02%)</title><rect x="1094.2" y="2053" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1097.25" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1365" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (603,489,200 samples, 0.69%)</title><rect x="185.5" y="53" width="8.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="63.5" ></text>
</g>
<g >
<title>update_one_slot.lto_priv.0 (11,177,153 samples, 0.01%)</title><rect x="12.4" y="2053" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="15.43" y="2063.5" ></text>
</g>
<g >
<title>PyList_Append (160,938,217 samples, 0.19%)</title><rect x="48.0" y="2053" width="2.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="50.97" y="2063.5" ></text>
</g>
<g >
<title>_PyObjectDict_SetItem (16,402,328 samples, 0.02%)</title><rect x="855.2" y="2053" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="858.17" y="2063.5" ></text>
</g>
<g >
<title>float_richcompare.lto_priv.0 (14,845,179 samples, 0.02%)</title><rect x="641.8" y="2037" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="644.79" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawCalloc (71,143,145 samples, 0.08%)</title><rect x="849.6" y="2053" width="1.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="852.62" y="2063.5" ></text>
</g>
<g >
<title>get_small_int.lto_priv.0 (36,030,481 samples, 0.04%)</title><rect x="1094.9" y="2053" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1097.88" y="2063.5" ></text>
</g>
<g >
<title>__memchr_avx2_rtm (19,248,880 samples, 0.02%)</title><rect x="966.8" y="2053" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="969.79" y="2063.5" ></text>
</g>
<g >
<title>listiter_next.lto_priv.0 (377,985,850 samples, 0.44%)</title><rect x="1097.7" y="2053" width="5.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1100.66" y="2063.5" ></text>
</g>
<g >
<title>_copy_characters (2,709,393,763 samples, 3.12%)</title><rect x="983.8" y="2053" width="36.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="986.80" y="2063.5" >_co..</text>
</g>
<g >
<title>tupledealloc.lto_priv.0 (12,191,899 samples, 0.01%)</title><rect x="12.1" y="2037" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="15.11" y="2047.5" ></text>
</g>
<g >
<title>dictbytype (16,336,884 samples, 0.02%)</title><rect x="237.7" y="2021" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="240.69" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="965" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="975.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1765" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1775.5" ></text>
</g>
<g >
<title>__strncasecmp_l_avx (19,591,814 samples, 0.02%)</title><rect x="10.1" y="2021" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="13.13" y="2031.5" ></text>
</g>
<g >
<title>func_descr_get.lto_priv.0 (28,823,505 samples, 0.03%)</title><rect x="654.2" y="2037" width="0.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="657.21" y="2047.5" ></text>
</g>
<g >
<title>_PyEval_MakeFrameVector (31,787,892 samples, 0.04%)</title><rect x="26.2" y="2053" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="29.16" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (603,489,200 samples, 0.69%)</title><rect x="185.5" y="85" width="8.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="95.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1333" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1343.5" ></text>
</g>
<g >
<title>_PyUnicode_JoinArray (1,801,578,523 samples, 2.07%)</title><rect x="938.1" y="2053" width="24.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="941.13" y="2063.5" >_..</text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="741" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="751.5" ></text>
</g>
<g >
<title>dict_dealloc.lto_priv.0 (183,014,918 samples, 0.21%)</title><rect x="628.3" y="2037" width="2.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="631.28" y="2047.5" ></text>
</g>
<g >
<title>[libcrypto.so.3] (20,735,382 samples, 0.02%)</title><rect x="91.6" y="2053" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="94.63" y="2063.5" ></text>
</g>
<g >
<title>gc_list_move (17,071,425 samples, 0.02%)</title><rect x="187.3" y="37" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="190.29" y="47.5" ></text>
</g>
<g >
<title>PyObject_Free (30,165,466 samples, 0.03%)</title><rect x="182.3" y="2021" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="185.28" y="2031.5" ></text>
</g>
<g >
<title>_PyUnicode_IsTitlecase (17,350,727 samples, 0.02%)</title><rect x="531.0" y="2037" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="533.99" y="2047.5" ></text>
</g>
<g >
<title>new_keys_object.lto_priv.0 (29,581,145 samples, 0.03%)</title><rect x="704.1" y="2037" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="707.06" y="2047.5" ></text>
</g>
<g >
<title>long_to_decimal_string.lto_priv.0 (28,902,445 samples, 0.03%)</title><rect x="688.2" y="2037" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="691.24" y="2047.5" ></text>
</g>
<g >
<title>_PyUnicode_FromUCS1.lto_priv.0 (189,172,545 samples, 0.22%)</title><rect x="528.2" y="2037" width="2.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="531.19" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (695,020,381 samples, 0.80%)</title><rect x="185.5" y="277" width="9.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="287.5" ></text>
</g>
<g >
<title>PyDict_Contains (183,532,815 samples, 0.21%)</title><rect x="99.3" y="2037" width="2.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="102.31" y="2047.5" ></text>
</g>
<g >
<title>add_operators.lto_priv.0 (15,951,084 samples, 0.02%)</title><rect x="593.5" y="2037" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="596.47" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1061" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1071.5" ></text>
</g>
<g >
<title>_PyDict_CheckConsistency (72,664,403 samples, 0.08%)</title><rect x="817.8" y="2053" width="1.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="820.84" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (661,841,290 samples, 0.76%)</title><rect x="185.5" y="261" width="9.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="271.5" ></text>
</g>
<g >
<title>[_json.cpython-310d-x86_64-linux-gnu.so] (143,966,685 samples, 0.17%)</title><rect x="162.5" y="2037" width="2.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="165.51" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (661,841,290 samples, 0.76%)</title><rect x="185.5" y="229" width="9.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="239.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_O.lto_priv.0 (15,685,237 samples, 0.02%)</title><rect x="1067.2" y="2053" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1070.20" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_New (11,360,363 samples, 0.01%)</title><rect x="12.3" y="2053" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="15.27" y="2063.5" ></text>
</g>
<g >
<title>__gconv_transform_utf8_internal (13,315,754 samples, 0.02%)</title><rect x="547.4" y="2037" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="550.37" y="2047.5" ></text>
</g>
<g >
<title>r_object (37,372,172 samples, 0.04%)</title><rect x="31.1" y="2053" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="34.06" y="2063.5" ></text>
</g>
<g >
<title>bitwise_or_rule.lto_priv.0 (16,297,615 samples, 0.02%)</title><rect x="1064.7" y="2053" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1067.68" y="2063.5" ></text>
</g>
<g >
<title>PyObject_GC_Del (164,249,441 samples, 0.19%)</title><rect x="52.0" y="2053" width="2.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="55.00" y="2063.5" ></text>
</g>
<g >
<title>[libc.so.6] (29,980,580 samples, 0.03%)</title><rect x="184.5" y="2021" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="187.48" y="2031.5" ></text>
</g>
<g >
<title>primary_raw (17,626,674 samples, 0.02%)</title><rect x="1134.3" y="2053" width="0.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1137.32" y="2063.5" ></text>
</g>
<g >
<title>module_getattro.lto_priv.0 (28,707,126 samples, 0.03%)</title><rect x="703.2" y="2037" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="706.20" y="2047.5" ></text>
</g>
<g >
<title>unicode_decode_utf8.lto_priv.0 (47,843,374 samples, 0.06%)</title><rect x="1165.5" y="2053" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1168.54" y="2063.5" ></text>
</g>
<g >
<title>siphash24 (50,437,105 samples, 0.06%)</title><rect x="773.0" y="2037" width="0.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="776.04" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1221" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (876,242,164 samples, 1.01%)</title><rect x="185.5" y="1509" width="11.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1519.5" ></text>
</g>
<g >
<title>r_string (34,180,098 samples, 0.04%)</title><rect x="722.2" y="2037" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="725.20" y="2047.5" ></text>
</g>
<g >
<title>get_list_state (17,541,002 samples, 0.02%)</title><rect x="23.3" y="2037" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="26.28" y="2047.5" ></text>
</g>
<g >
<title>set_contains.lto_priv.0 (17,588,274 samples, 0.02%)</title><rect x="772.6" y="2037" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="775.62" y="2047.5" ></text>
</g>
<g >
<title>PyThread_tss_is_created (29,661,754 samples, 0.03%)</title><rect x="183.9" y="2021" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="186.87" y="2031.5" ></text>
</g>
<g >
<title>_PyEval_MakeFrameVector (326,226,863 samples, 0.38%)</title><rect x="366.3" y="2037" width="4.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="369.34" y="2047.5" ></text>
</g>
<g >
<title>long_add.lto_priv.0 (17,791,566 samples, 0.02%)</title><rect x="686.1" y="2037" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="689.14" y="2047.5" ></text>
</g>
<g >
<title>PyErr_CheckSignals (21,893,826 samples, 0.03%)</title><rect x="108.4" y="2037" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="111.44" y="2047.5" ></text>
</g>
<g >
<title>_PyTrash_begin (127,852,755 samples, 0.15%)</title><rect x="505.8" y="2037" width="1.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="508.82" y="2047.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms_rtm (551,760,579 samples, 0.64%)</title><rect x="975.3" y="2053" width="7.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="978.30" y="2063.5" ></text>
</g>
<g >
<title>PyObject_GetItem (35,693,802 samples, 0.04%)</title><rect x="134.9" y="2037" width="0.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="137.94" y="2047.5" ></text>
</g>
<g >
<title>PyMem_Free (27,061,130 samples, 0.03%)</title><rect x="181.9" y="2021" width="0.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="184.91" y="2031.5" ></text>
</g>
<g >
<title>list_ass_subscript.lto_priv.0 (18,911,222 samples, 0.02%)</title><rect x="671.2" y="2037" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="674.16" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_IsFreed (57,926,168 samples, 0.07%)</title><rect x="20.0" y="2037" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="22.99" y="2047.5" ></text>
</g>
<g >
<title>all (86,863,895,905 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>PyDict_SetDefault (16,282,943 samples, 0.02%)</title><rect x="106.6" y="2037" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="109.58" y="2047.5" ></text>
</g>
<g >
<title>PyThread_tss_is_created (14,136,141 samples, 0.02%)</title><rect x="57.4" y="2053" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="60.37" y="2063.5" ></text>
</g>
<g >
<title>_PyDict_ContainsId (18,056,939 samples, 0.02%)</title><rect x="257.3" y="2037" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="260.29" y="2047.5" ></text>
</g>
<g >
<title>gettyperecord (33,065,829 samples, 0.04%)</title><rect x="660.1" y="2037" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="663.12" y="2047.5" ></text>
</g>
<g >
<title>visit_reachable (16,084,499 samples, 0.02%)</title><rect x="800.1" y="2037" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="803.10" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugRealloc (90,752,877 samples, 0.10%)</title><rect x="468.1" y="2037" width="1.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="471.09" y="2047.5" ></text>
</g>
<g >
<title>insert_to_emptydict (52,959,681 samples, 0.06%)</title><rect x="661.2" y="2037" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="664.22" y="2047.5" ></text>
</g>
<g >
<title>inherit_slots (17,428,495 samples, 0.02%)</title><rect x="660.8" y="2037" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="663.76" y="2047.5" ></text>
</g>
<g >
<title>find_name_in_mro.lto_priv.0 (348,651,641 samples, 0.40%)</title><rect x="1088.9" y="2053" width="4.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1091.87" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (44,101,535 samples, 0.05%)</title><rect x="494.2" y="2037" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="497.19" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawAlloc (744,564,278 samples, 0.86%)</title><rect x="447.3" y="2037" width="10.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="450.34" y="2047.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms_rtm (112,947,593 samples, 0.13%)</title><rect x="548.2" y="2037" width="1.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="551.16" y="2047.5" ></text>
</g>
<g >
<title>delitem_common (247,309,043 samples, 0.28%)</title><rect x="1068.3" y="2053" width="3.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1071.27" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (127,549,737 samples, 0.15%)</title><rect x="10.5" y="2053" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.54" y="2063.5" ></text>
</g>
<g >
<title>long_normalize.lto_priv.0 (17,559,762 samples, 0.02%)</title><rect x="688.0" y="2037" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="691.00" y="2047.5" ></text>
</g>
<g >
<title>PyTuple_GetItem (586,422,074 samples, 0.68%)</title><rect x="145.9" y="2037" width="8.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="148.93" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1397" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="645" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="655.5" ></text>
</g>
<g >
<title>get_dict_state (30,400,616 samples, 0.03%)</title><rect x="655.0" y="2037" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="658.00" y="2047.5" ></text>
</g>
<g >
<title>new_dict_with_shared_keys.lto_priv.0 (16,394,005 samples, 0.02%)</title><rect x="703.8" y="2037" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="706.84" y="2047.5" ></text>
</g>
<g >
<title>PyUnicode_New (1,460,163,442 samples, 1.68%)</title><rect x="65.5" y="2053" width="19.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="68.55" y="2063.5" ></text>
</g>
<g >
<title>_PyMem_DebugFree (120,024,923 samples, 0.14%)</title><rect x="199.3" y="2021" width="1.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="202.34" y="2031.5" ></text>
</g>
<g >
<title>asciilib_fastsearch.lto_priv.0 (15,611,102 samples, 0.02%)</title><rect x="22.4" y="2037" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="25.42" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_IsFreed (17,810,686 samples, 0.02%)</title><rect x="856.9" y="2053" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="859.86" y="2063.5" ></text>
</g>
<g >
<title>__strlen_avx2_rtm (34,037,053 samples, 0.04%)</title><rect x="589.2" y="2037" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="592.18" y="2047.5" ></text>
</g>
<g >
<title>[libcrypto.so.3] (32,049,737 samples, 0.04%)</title><rect x="184.9" y="2021" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="187.89" y="2031.5" ></text>
</g>
<g >
<title>list_extend.lto_priv.0 (11,833,211 samples, 0.01%)</title><rect x="676.9" y="2037" width="0.1" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="679.86" y="2047.5" ></text>
</g>
<g >
<title>_Py_Dealloc (53,727,424 samples, 0.06%)</title><rect x="963.8" y="2053" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="966.82" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1205" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1215.5" ></text>
</g>
<g >
<title>__strchr_avx2_rtm (59,716,098 samples, 0.07%)</title><rect x="982.8" y="2053" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="985.80" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1045" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1055.5" ></text>
</g>
<g >
<title>term_rule (31,832,996 samples, 0.04%)</title><rect x="1162.7" y="2053" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1165.68" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.10 (326,665,028 samples, 0.38%)</title><rect x="875.8" y="2053" width="4.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="878.83" y="2063.5" ></text>
</g>
<g >
<title>tuple_alloc (63,098,905 samples, 0.07%)</title><rect x="246.5" y="2021" width="0.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="249.50" y="2031.5" ></text>
</g>
<g >
<title>named_expression_rule.lto_priv.0 (18,009,935 samples, 0.02%)</title><rect x="1133.1" y="2053" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1136.05" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="757" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="767.5" ></text>
</g>
<g >
<title>_Py_CheckSlotResult (15,507,529 samples, 0.02%)</title><rect x="543.8" y="2037" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="546.77" y="2047.5" ></text>
</g>
<g >
<title>frame_dealloc.lto_priv.0 (15,187,096 samples, 0.02%)</title><rect x="23.1" y="2037" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="26.08" y="2047.5" ></text>
</g>
<g >
<title>_PyType_Lookup (20,394,427 samples, 0.02%)</title><rect x="20.8" y="2037" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="23.78" y="2047.5" ></text>
</g>
<g >
<title>PyMem_Calloc (46,333,589 samples, 0.05%)</title><rect x="50.6" y="2053" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="53.57" y="2063.5" ></text>
</g>
<g >
<title>countformat (15,042,905 samples, 0.02%)</title><rect x="627.6" y="2037" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="630.62" y="2047.5" ></text>
</g>
<g >
<title>PyCode_Addr2Line (17,388,066 samples, 0.02%)</title><rect x="33.0" y="2053" width="0.3" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="36.02" y="2063.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (7,121,517,475 samples, 8.20%)</title><rect x="269.6" y="2037" width="96.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="272.60" y="2047.5" >_PyEval_Eva..</text>
</g>
<g >
<title>insertdict (41,182,743 samples, 0.05%)</title><rect x="23.5" y="2037" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="26.52" y="2047.5" ></text>
</g>
<g >
<title>PyUnicode_New (51,017,904 samples, 0.06%)</title><rect x="160.5" y="2037" width="0.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="163.50" y="2047.5" ></text>
</g>
<g >
<title>read_size_t (3,406,688,410 samples, 3.92%)</title><rect x="722.9" y="2037" width="46.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="725.87" y="2047.5" >read..</text>
</g>
<g >
<title>PyThread_tss_get (354,375,665 samples, 0.41%)</title><rect x="139.0" y="2037" width="4.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="142.05" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (891,912,632 samples, 1.03%)</title><rect x="185.5" y="1573" width="12.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1013" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1023.5" ></text>
</g>
<g >
<title>write_size_t (12,249,941 samples, 0.01%)</title><rect x="197.8" y="1909" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="200.83" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (52,480,877,409 samples, 60.42%)</title><rect x="97.1" y="2053" width="713.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="100.14" y="2063.5" >[unknown]</text>
</g>
<g >
<title>PyObject_Free (29,873,537 samples, 0.03%)</title><rect x="51.6" y="2053" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="54.59" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1173" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1183.5" ></text>
</g>
<g >
<title>frame_alloc (18,291,831 samples, 0.02%)</title><rect x="29.5" y="2053" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="32.46" y="2063.5" ></text>
</g>
<g >
<title>PyTuple_New (94,708,395 samples, 0.11%)</title><rect x="153.9" y="2037" width="1.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="156.90" y="2047.5" ></text>
</g>
<g >
<title>subtype_traverse.lto_priv.0 (14,922,732 samples, 0.02%)</title><rect x="1161.6" y="2053" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1164.60" y="2063.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (178,815,883 samples, 0.21%)</title><rect x="16.5" y="2037" width="2.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="19.52" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (27,383,595 samples, 0.03%)</title><rect x="27.1" y="2053" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="30.08" y="2063.5" ></text>
</g>
<g >
<title>lookdict_unicode_nodummy (393,239,688 samples, 0.45%)</title><rect x="696.4" y="2037" width="5.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="699.38" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1909" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1919.5" ></text>
</g>
<g >
<title>_PyAccu_Accumulate (496,598,810 samples, 0.57%)</title><rect x="810.3" y="2053" width="6.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="813.31" y="2063.5" ></text>
</g>
<g >
<title>PyObject_GC_UnTrack (151,012,204 samples, 0.17%)</title><rect x="129.1" y="2037" width="2.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="132.06" y="2047.5" ></text>
</g>
<g >
<title>_PyDict_CheckConsistency (64,396,910 samples, 0.07%)</title><rect x="256.4" y="2037" width="0.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="259.41" y="2047.5" ></text>
</g>
<g >
<title>PyNumber_AsSsize_t (18,786,406 samples, 0.02%)</title><rect x="127.7" y="2037" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="130.69" y="2047.5" ></text>
</g>
<g >
<title>_PyNumber_Index (47,338,334 samples, 0.05%)</title><rect x="469.3" y="2037" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="472.32" y="2047.5" ></text>
</g>
<g >
<title>find_name_in_mro.lto_priv.0 (43,900,682 samples, 0.05%)</title><rect x="238.1" y="2021" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="241.14" y="2031.5" ></text>
</g>
<g >
<title>__strlen_avx2_rtm (10,307,131 samples, 0.01%)</title><rect x="10.4" y="2037" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="13.40" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (785,481,549 samples, 0.90%)</title><rect x="185.5" y="501" width="10.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="511.5" ></text>
</g>
<g >
<title>unicode_dealloc.lto_priv.0 (31,045,057 samples, 0.04%)</title><rect x="1165.1" y="2053" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1168.12" y="2063.5" ></text>
</g>
<g >
<title>method_vectorcall_O (46,801,098 samples, 0.05%)</title><rect x="1132.4" y="2053" width="0.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1135.42" y="2063.5" ></text>
</g>
<g >
<title>list_sort_impl (13,168,566 samples, 0.02%)</title><rect x="1096.7" y="2053" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1099.66" y="2063.5" ></text>
</g>
<g >
<title>sum_raw (17,738,385 samples, 0.02%)</title><rect x="1161.8" y="2053" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1164.80" y="2063.5" ></text>
</g>
<g >
<title>convertitem (29,243,315 samples, 0.03%)</title><rect x="1067.9" y="2053" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1070.87" y="2063.5" ></text>
</g>
<g >
<title>_PyMem_DebugCheckAddress (4,643,472,644 samples, 5.35%)</title><rect x="377.7" y="2037" width="63.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="380.74" y="2047.5" >_PyMem..</text>
</g>
<g >
<title>[unknown] (724,768,449 samples, 0.83%)</title><rect x="185.5" y="357" width="9.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="367.5" ></text>
</g>
<g >
<title>init_by_array (16,295,621 samples, 0.02%)</title><rect x="661.0" y="2037" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="664.00" y="2047.5" ></text>
</g>
<g >
<title>PyThreadState_Get (45,395,929 samples, 0.05%)</title><rect x="182.7" y="2021" width="0.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="185.69" y="2031.5" ></text>
</g>
<g >
<title>_PyTuple_FromArray (191,500,305 samples, 0.22%)</title><rect x="205.9" y="2021" width="2.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="208.89" y="2031.5" ></text>
</g>
<g >
<title>disjunction_rule.lto_priv.0 (16,163,897 samples, 0.02%)</title><rect x="1078.1" y="2053" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1081.08" y="2063.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (17,664,789 samples, 0.02%)</title><rect x="55.2" y="2053" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="58.18" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (29,385,669 samples, 0.03%)</title><rect x="10.0" y="2037" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>unicode_result_unchanged.lto_priv.0 (17,106,310 samples, 0.02%)</title><rect x="1173.9" y="2053" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1176.90" y="2063.5" ></text>
</g>
<g >
<title>unicode_char.lto_priv.0 (16,281,398 samples, 0.02%)</title><rect x="1164.9" y="2053" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1167.90" y="2063.5" ></text>
</g>
<g >
<title>is_tstate_valid.lto_priv.0 (211,623,159 samples, 0.24%)</title><rect x="667.9" y="2037" width="2.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="670.88" y="2047.5" ></text>
</g>
<g >
<title>_Py_mbstowcs (13,355,102 samples, 0.02%)</title><rect x="966.6" y="2053" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="969.61" y="2063.5" ></text>
</g>
<g >
<title>arena_map_is_used (385,193,336 samples, 0.44%)</title><rect x="607.1" y="2037" width="5.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="610.12" y="2047.5" ></text>
</g>
<g >
<title>list_item.lto_priv.0 (15,653,654 samples, 0.02%)</title><rect x="1096.4" y="2053" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1099.45" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (876,242,164 samples, 1.01%)</title><rect x="185.5" y="1525" width="11.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1535.5" ></text>
</g>
<g >
<title>slotptr (18,035,725 samples, 0.02%)</title><rect x="774.0" y="2037" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="776.95" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_Free (712,267,218 samples, 0.82%)</title><rect x="470.7" y="2037" width="9.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="473.70" y="2047.5" ></text>
</g>
<g >
<title>unicode_fill_invalid.lto_priv.0 (15,550,945 samples, 0.02%)</title><rect x="794.6" y="2037" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="797.62" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (917,268,594 samples, 1.06%)</title><rect x="185.5" y="1925" width="12.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1935.5" ></text>
</g>
<g >
<title>star_expressions_rule.lto_priv.0 (18,355,495 samples, 0.02%)</title><rect x="1161.3" y="2053" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1164.35" y="2063.5" ></text>
</g>
<g >
<title>encoder_listencode_dict (121,185,223 samples, 0.14%)</title><rect x="632.4" y="2037" width="1.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="635.36" y="2047.5" ></text>
</g>
<g >
<title>PyErr_Occurred (30,059,033 samples, 0.03%)</title><rect x="108.7" y="2037" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="111.74" y="2047.5" ></text>
</g>
<g >
<title>insertdict (368,797,208 samples, 0.42%)</title><rect x="661.9" y="2037" width="5.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="664.94" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (724,768,449 samples, 0.83%)</title><rect x="185.5" y="309" width="9.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="319.5" ></text>
</g>
<g >
<title>_PyUnicode_CheckConsistency (77,085,261 samples, 0.09%)</title><rect x="208.5" y="2021" width="1.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="211.49" y="2031.5" ></text>
</g>
<g >
<title>PyObject_ClearWeakRefs (17,435,554 samples, 0.02%)</title><rect x="128.2" y="2037" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="131.17" y="2047.5" ></text>
</g>
<g >
<title>all_name_chars (15,470,238 samples, 0.02%)</title><rect x="22.2" y="2037" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="25.21" y="2047.5" ></text>
</g>
<g >
<title>pthread_rwlock_unlock@@GLIBC_2.34 (79,294,041 samples, 0.09%)</title><rect x="1150.9" y="2053" width="1.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1153.91" y="2063.5" ></text>
</g>
<g >
<title>frame_alloc (133,374,386 samples, 0.15%)</title><rect x="642.0" y="2037" width="1.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="644.99" y="2047.5" ></text>
</g>
<g >
<title>_PyDict_DelItem_KnownHash (167,643,702 samples, 0.19%)</title><rect x="257.5" y="2037" width="2.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="260.53" y="2047.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (17,003,261 samples, 0.02%)</title><rect x="137.3" y="2037" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="140.29" y="2047.5" ></text>
</g>
<g >
<title>_Py_NewReference (120,445,368 samples, 0.14%)</title><rect x="545.7" y="2037" width="1.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="548.74" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (724,768,449 samples, 0.83%)</title><rect x="185.5" y="293" width="9.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="303.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1093" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1103.5" ></text>
</g>
<g >
<title>PyGILState_Check (105,259,859 samples, 0.12%)</title><rect x="180.5" y="2021" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="183.48" y="2031.5" ></text>
</g>
<g >
<title>move_unreachable (177,413,134 samples, 0.20%)</title><rect x="187.5" y="37" width="2.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="190.52" y="47.5" ></text>
</g>
<g >
<title>unpack_stack (16,247,537 samples, 0.02%)</title><rect x="1174.1" y="2053" width="0.3" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1177.13" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1157" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1167.5" ></text>
</g>
<g >
<title>func_traverse.lto_priv.0 (29,118,247 samples, 0.03%)</title><rect x="654.6" y="2037" width="0.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="657.60" y="2047.5" ></text>
</g>
<g >
<title>_PyTrash_cond (46,244,383 samples, 0.05%)</title><rect x="507.6" y="2037" width="0.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="510.56" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="997" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1007.5" ></text>
</g>
<g >
<title>_PyBytes_FromSize.lto_priv.0 (41,109,120 samples, 0.05%)</title><rect x="817.3" y="2053" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="820.28" y="2063.5" ></text>
</g>
<g >
<title>lookdict_unicode (49,329,934 samples, 0.06%)</title><rect x="695.7" y="2037" width="0.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="698.71" y="2047.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (21,511,214 samples, 0.02%)</title><rect x="619.3" y="2037" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="622.33" y="2047.5" ></text>
</g>
<g >
<title>PyObject_IsTrue (60,082,100 samples, 0.07%)</title><rect x="136.5" y="2037" width="0.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="139.47" y="2047.5" ></text>
</g>
<g >
<title>_PyEval_Vector (181,279,745 samples, 0.21%)</title><rect x="371.0" y="2037" width="2.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="373.96" y="2047.5" ></text>
</g>
<g >
<title>PyUnicode_Append (40,335,652 samples, 0.05%)</title><rect x="159.2" y="2037" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="162.21" y="2047.5" ></text>
</g>
<g >
<title>__wcsrtombs (13,680,437 samples, 0.02%)</title><rect x="983.6" y="2053" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="986.61" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1253" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1263.5" ></text>
</g>
<g >
<title>type_ready_mro (26,707,665 samples, 0.03%)</title><rect x="248.0" y="2021" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="250.99" y="2031.5" ></text>
</g>
<g >
<title>flush_accumulator (22,129,221 samples, 0.03%)</title><rect x="1093.6" y="2053" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1096.61" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1749" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1759.5" ></text>
</g>
<g >
<title>python3.10-dbg (1,413,304,559 samples, 1.63%)</title><rect x="12.9" y="2069" width="19.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="15.90" y="2079.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="949" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="959.5" ></text>
</g>
<g >
<title>dictiter_iternextvalue.lto_priv.0 (19,105,834 samples, 0.02%)</title><rect x="631.2" y="2037" width="0.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="634.24" y="2047.5" ></text>
</g>
<g >
<title>long_and.lto_priv.0 (17,456,202 samples, 0.02%)</title><rect x="686.4" y="2037" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="689.38" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1029" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1039.5" ></text>
</g>
<g >
<title>PyObject_Malloc (52,430,419 samples, 0.06%)</title><rect x="54.5" y="2053" width="0.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="57.46" y="2063.5" ></text>
</g>
<g >
<title>PyObject_GC_Track (17,788,479 samples, 0.02%)</title><rect x="128.8" y="2037" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="131.82" y="2047.5" ></text>
</g>
<g >
<title>update_symbols (12,163,322 samples, 0.01%)</title><rect x="796.1" y="2037" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="799.11" y="2047.5" ></text>
</g>
<g >
<title>PyThread_tss_get (41,469,844 samples, 0.05%)</title><rect x="183.3" y="2021" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="186.30" y="2031.5" ></text>
</g>
<g >
<title>_PyMem_DebugCheckAddress (49,845,683 samples, 0.06%)</title><rect x="19.0" y="2037" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="21.95" y="2047.5" ></text>
</g>
<g >
<title>_PyObjectDict_SetItem (54,413,503 samples, 0.06%)</title><rect x="470.0" y="2037" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="472.96" y="2047.5" ></text>
</g>
<g >
<title>_PyUnicode_CheckConsistency (678,811,975 samples, 0.78%)</title><rect x="516.6" y="2037" width="9.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="519.62" y="2047.5" ></text>
</g>
<g >
<title>type_getattro.lto_priv.0 (146,755,088 samples, 0.17%)</title><rect x="791.4" y="2037" width="1.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="794.35" y="2047.5" ></text>
</g>
<g >
<title>PyUnicode_InternInPlace (15,572,880 samples, 0.02%)</title><rect x="184.3" y="2021" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="187.27" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (917,268,594 samples, 1.06%)</title><rect x="185.5" y="1989" width="12.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1999.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (27,519,821 samples, 0.03%)</title><rect x="203.3" y="2021" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="206.31" y="2031.5" ></text>
</g>
<g >
<title>app1 (107,245,697 samples, 0.12%)</title><rect x="1023.7" y="2053" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1026.72" y="2063.5" ></text>
</g>
<g >
<title>tuplehash.lto_priv.0 (14,850,936 samples, 0.02%)</title><rect x="790.4" y="2037" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="793.35" y="2047.5" ></text>
</g>
<g >
<title>lookdict (14,184,928 samples, 0.02%)</title><rect x="29.7" y="2053" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="32.71" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (917,268,594 samples, 1.06%)</title><rect x="185.5" y="2005" width="12.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="2015.5" ></text>
</g>
<g >
<title>func_dealloc.lto_priv.0 (41,090,662 samples, 0.05%)</title><rect x="653.7" y="2037" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="656.65" y="2047.5" ></text>
</g>
<g >
<title>[dpkg-query] (9,793,855 samples, 0.01%)</title><rect x="10.0" y="2021" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>_PyMem_DebugRealloc (22,664,520 samples, 0.03%)</title><rect x="854.6" y="2053" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="857.65" y="2063.5" ></text>
</g>
<g >
<title>long_bitwise (14,611,224 samples, 0.02%)</title><rect x="686.6" y="2037" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="689.61" y="2047.5" ></text>
</g>
<g >
<title>_PyAST_Name (17,892,328 samples, 0.02%)</title><rect x="810.1" y="2053" width="0.2" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="813.07" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1189" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1199.5" ></text>
</g>
<g >
<title>unsafe_long_compare (16,798,653 samples, 0.02%)</title><rect x="1174.4" y="2053" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1177.35" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (876,242,164 samples, 1.01%)</title><rect x="185.5" y="1541" width="11.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1551.5" ></text>
</g>
<g >
<title>shift_expr_raw (14,989,745 samples, 0.02%)</title><rect x="1158.5" y="2053" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1161.51" y="2063.5" ></text>
</g>
<g >
<title>ascii_escape_unicode (312,315,766 samples, 0.36%)</title><rect x="612.3" y="2037" width="4.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="615.35" y="2047.5" ></text>
</g>
<g >
<title>PyMem_RawFree (17,316,983 samples, 0.02%)</title><rect x="124.5" y="2037" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="127.51" y="2047.5" ></text>
</g>
<g >
<title>PyGILState_Check (737,948,613 samples, 0.85%)</title><rect x="37.6" y="2053" width="10.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="40.55" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (917,268,594 samples, 1.06%)</title><rect x="185.5" y="1957" width="12.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1967.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@@GLIBC_2.2.5 (17,070,416 samples, 0.02%)</title><rect x="717.2" y="2037" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="720.18" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="709" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="719.5" ></text>
</g>
<g >
<title>_PyEval_SliceIndex (13,613,223 samples, 0.02%)</title><rect x="370.8" y="2037" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="373.77" y="2047.5" ></text>
</g>
<g >
<title>visit_reachable (192,147,051 samples, 0.22%)</title><rect x="191.1" y="37" width="2.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="194.13" y="47.5" ></text>
</g>
<g >
<title>PyThread_tss_is_created (152,401,884 samples, 0.18%)</title><rect x="143.9" y="2037" width="2.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="146.86" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (891,912,632 samples, 1.03%)</title><rect x="185.5" y="1557" width="12.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1567.5" ></text>
</g>
<g >
<title>type_new_set_names.lto_priv.0 (16,350,519 samples, 0.02%)</title><rect x="16.1" y="2021" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="19.11" y="2031.5" ></text>
</g>
<g >
<title>join_list_unicode (30,101,020 samples, 0.03%)</title><rect x="670.8" y="2037" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="673.75" y="2047.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (293,810,113 samples, 0.34%)</title><rect x="102.6" y="2037" width="4.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="105.59" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.10 (145,593,658 samples, 0.17%)</title><rect x="203.7" y="2021" width="2.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="206.69" y="2031.5" ></text>
</g>
<g >
<title>builtin_isinstance_impl (29,494,334 samples, 0.03%)</title><rect x="617.6" y="2037" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="620.64" y="2047.5" ></text>
</g>
<g >
<title>PyTuple_New (538,344,853 samples, 0.62%)</title><rect x="57.6" y="2053" width="7.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="60.56" y="2063.5" ></text>
</g>
<g >
<title>_PyPegen_insert_memo (17,457,477 samples, 0.02%)</title><rect x="880.5" y="2053" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="883.45" y="2063.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawMalloc (278,511,361 samples, 0.32%)</title><rect x="850.6" y="2053" width="3.8" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="853.59" y="2063.5" ></text>
</g>
<g >
<title>[python3.10d] (15,812,176 samples, 0.02%)</title><rect x="185.3" y="2021" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="188.32" y="2031.5" ></text>
</g>
<g >
<title>CRYPTO_strndup (17,376,955 samples, 0.02%)</title><rect x="97.4" y="2037" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="100.44" y="2047.5" ></text>
</g>
<g >
<title>PyList_New (30,388,350 samples, 0.03%)</title><rect x="50.2" y="2053" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="53.16" y="2063.5" ></text>
</g>
<g >
<title>PyGILState_Check (595,863,470 samples, 0.69%)</title><rect x="112.3" y="2037" width="8.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="115.35" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_GC_Alloc (267,752,721 samples, 0.31%)</title><rect x="480.4" y="2037" width="3.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="483.38" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (905,018,653 samples, 1.04%)</title><rect x="185.5" y="1621" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="821" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="831.5" ></text>
</g>
<g >
<title>tuplehash.lto_priv.0 (17,539,930 samples, 0.02%)</title><rect x="1164.4" y="2053" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1167.45" y="2063.5" ></text>
</g>
<g >
<title>bytearray___init___impl.lto_priv.0 (31,146,987 samples, 0.04%)</title><rect x="1066.0" y="2053" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1069.05" y="2063.5" ></text>
</g>
<g >
<title>PyDict_DelItem (58,087,751 samples, 0.07%)</title><rect x="101.8" y="2037" width="0.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="104.80" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawRealloc (20,210,805 samples, 0.02%)</title><rect x="854.4" y="2053" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="857.37" y="2063.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL.lto_priv.0 (47,388,523 samples, 0.05%)</title><rect x="619.6" y="2037" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="622.62" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (631,929,338 samples, 0.73%)</title><rect x="185.5" y="197" width="8.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="207.5" ></text>
</g>
<g >
<title>recursive_issubclass (17,533,570 samples, 0.02%)</title><rect x="770.0" y="2037" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="772.96" y="2047.5" ></text>
</g>
<g >
<title>_Py_CheckFunctionResult (89,149,797 samples, 0.10%)</title><rect x="962.6" y="2053" width="1.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="965.61" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="773" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="783.5" ></text>
</g>
<g >
<title>pymalloc_pool_extend (105,679,500 samples, 0.12%)</title><rect x="719.5" y="2037" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="722.49" y="2047.5" ></text>
</g>
<g >
<title>_encoded_const (92,246,382 samples, 0.11%)</title><rect x="590.2" y="2037" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="593.17" y="2047.5" ></text>
</g>
<g >
<title>_PyUnicode_CheckConsistency (23,188,952 samples, 0.03%)</title><rect x="21.3" y="2037" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="24.27" y="2047.5" ></text>
</g>
<g >
<title>new_dict (18,360,340 samples, 0.02%)</title><rect x="703.6" y="2037" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="706.59" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="677" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="687.5" ></text>
</g>
<g >
<title>findchar.lto_priv.0 (17,184,786 samples, 0.02%)</title><rect x="22.8" y="2037" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="25.84" y="2047.5" ></text>
</g>
<g >
<title>r_object (15,604,766 samples, 0.02%)</title><rect x="722.0" y="2037" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="724.98" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (754,834,111 samples, 0.87%)</title><rect x="185.5" y="405" width="10.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="415.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (30,647,438 samples, 0.04%)</title><rect x="195.8" y="485" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="198.79" y="495.5" ></text>
</g>
<g >
<title>_PyMem_DebugMalloc (93,668,197 samples, 0.11%)</title><rect x="446.1" y="2037" width="1.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="449.07" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1413" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (603,489,200 samples, 0.69%)</title><rect x="185.5" y="101" width="8.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="111.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe_rtm (18,030,312 samples, 0.02%)</title><rect x="28.1" y="2053" width="0.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="31.07" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.2 (16,329,743 samples, 0.02%)</title><rect x="205.7" y="2021" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="208.66" y="2031.5" ></text>
</g>
<g >
<title>PyObject_IS_GC (13,752,816 samples, 0.02%)</title><rect x="136.3" y="2037" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="139.29" y="2047.5" ></text>
</g>
<g >
<title>unicode_fromformat_write_str (19,394,911 samples, 0.02%)</title><rect x="794.8" y="2037" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="797.83" y="2047.5" ></text>
</g>
<g >
<title>dictiter_iternextitem.lto_priv.0 (16,384,376 samples, 0.02%)</title><rect x="631.0" y="2037" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="634.02" y="2047.5" ></text>
</g>
<g >
<title>PyType_GetModule (19,077,694 samples, 0.02%)</title><rect x="155.2" y="2037" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="158.19" y="2047.5" ></text>
</g>
<g >
<title>unicode_compare_eq (18,163,260 samples, 0.02%)</title><rect x="794.2" y="2037" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="797.20" y="2047.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (119,429,364 samples, 0.14%)</title><rect x="33.3" y="2053" width="1.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="36.25" y="2063.5" ></text>
</g>
<g >
<title>_list_clear.lto_priv.0 (806,529,207 samples, 0.93%)</title><rect x="213.5" y="2021" width="10.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="216.47" y="2031.5" ></text>
</g>
<g >
<title>all_name_chars (47,363,016 samples, 0.05%)</title><rect x="595.9" y="2037" width="0.6" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="598.90" y="2047.5" ></text>
</g>
<g >
<title>listiter_dealloc.lto_priv.0 (60,531,176 samples, 0.07%)</title><rect x="1096.8" y="2053" width="0.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1099.84" y="2063.5" ></text>
</g>
<g >
<title>visit_decref (29,418,817 samples, 0.03%)</title><rect x="25.8" y="2037" width="0.4" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="28.76" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1317" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1327.5" ></text>
</g>
<g >
<title>_PyErr_NormalizeException (13,365,895 samples, 0.02%)</title><rect x="268.5" y="2037" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="271.51" y="2047.5" ></text>
</g>
<g >
<title>set_contains_key (13,050,518 samples, 0.02%)</title><rect x="772.9" y="2037" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="775.86" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (603,489,200 samples, 0.69%)</title><rect x="185.5" y="69" width="8.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="79.5" ></text>
</g>
<g >
<title>_PyDict_Next (16,202,987 samples, 0.02%)</title><rect x="268.3" y="2037" width="0.2" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="271.29" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (754,834,111 samples, 0.87%)</title><rect x="185.5" y="485" width="10.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="495.5" ></text>
</g>
<g >
<title>_PyErr_SetObject (16,704,251 samples, 0.02%)</title><rect x="269.2" y="2037" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="272.18" y="2047.5" ></text>
</g>
<g >
<title>descr_traverse.lto_priv.0 (15,051,087 samples, 0.02%)</title><rect x="186.3" y="37" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="189.25" y="47.5" ></text>
</g>
<g >
<title>[unknown] (603,489,200 samples, 0.69%)</title><rect x="185.5" y="149" width="8.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="159.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (30,065,662 samples, 0.03%)</title><rect x="195.4" y="357" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="198.38" y="367.5" ></text>
</g>
<g >
<title>_PyDict_GetItem_KnownHash (97,298,628 samples, 0.11%)</title><rect x="818.8" y="2053" width="1.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="821.83" y="2063.5" ></text>
</g>
<g >
<title>structseq_dealloc (14,837,685 samples, 0.02%)</title><rect x="25.0" y="2037" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="28.02" y="2047.5" ></text>
</g>
<g >
<title>PyGILState_Check (36,087,494 samples, 0.04%)</title><rect x="12.9" y="2053" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="15.90" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (814,969,200 samples, 0.94%)</title><rect x="185.5" y="1349" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="1359.5" ></text>
</g>
<g >
<title>_resize_tokens_array (17,455,798 samples, 0.02%)</title><rect x="224.4" y="2021" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="227.42" y="2031.5" ></text>
</g>
<g >
<title>PyGILState_Check (17,791,280 samples, 0.02%)</title><rect x="14.2" y="2037" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="17.17" y="2047.5" ></text>
</g>
<g >
<title>encoder_new (85,311,633 samples, 0.10%)</title><rect x="1087.5" y="2053" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1090.53" y="2063.5" ></text>
</g>
<g >
<title>intern_strings (17,915,424 samples, 0.02%)</title><rect x="1095.6" y="2053" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1098.58" y="2063.5" ></text>
</g>
<g >
<title>tok_nextc (17,262,932 samples, 0.02%)</title><rect x="246.3" y="2021" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="249.26" y="2031.5" ></text>
</g>
<g >
<title>list_dealloc.lto_priv.0 (400,169,126 samples, 0.46%)</title><rect x="671.4" y="2037" width="5.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="674.42" y="2047.5" ></text>
</g>
<g >
<title>lookdict (240,589,603 samples, 0.28%)</title><rect x="690.7" y="2037" width="3.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="693.66" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (15,670,468 samples, 0.02%)</title><rect x="197.4" y="1541" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="200.44" y="1551.5" ></text>
</g>
<g >
<title>_steal_accumulate (80,119,291 samples, 0.09%)</title><rect x="1022.4" y="2053" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1025.42" y="2063.5" ></text>
</g>
<g >
<title>app1 (704,562,634 samples, 0.81%)</title><rect x="596.5" y="2037" width="9.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="599.54" y="2047.5" ></text>
</g>
<g >
<title>_PyModule_ClearDict (15,519,325 samples, 0.02%)</title><rect x="855.0" y="2053" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="857.95" y="2063.5" ></text>
</g>
<g >
<title>_PyAccu_Accumulate (315,096,695 samples, 0.36%)</title><rect x="252.1" y="2037" width="4.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="255.13" y="2047.5" ></text>
</g>
<g >
<title>lookdict (181,601,259 samples, 0.21%)</title><rect x="1103.1" y="2053" width="2.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1106.15" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (785,481,549 samples, 0.90%)</title><rect x="185.5" y="629" width="10.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="188.54" y="639.5" ></text>
</g>
<g >
<title>encoder_listencode_obj (120,361,420 samples, 0.14%)</title><rect x="1085.9" y="2053" width="1.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1088.89" y="2063.5" ></text>
</g>
</g>
</svg>
